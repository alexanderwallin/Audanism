// Generated by CoffeeScript 1.10.0

/*
	Reverb
 */

(function() {
  var Reverb,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Reverb = (function(superClass) {
    extend(Reverb, superClass);

    function Reverb(seconds, decay, wetAmount) {
      this.seconds = seconds;
      this.decay = decay;
      this.wetAmount = wetAmount;
      if (this.seconds == null) {
        this.seconds = 1;
      }
      if (this.decay == null) {
        this.decay = 0.5;
      }
      if (this.wetAmount == null) {
        this.wetAmount = 1;
      }
      this.impulse = new Audanism.Audio.Module.Impulse(this.seconds, this.decay);
      this.rev = Audanism.Audio.audioContext.createConvolver();
      this.rev.buffer = this.impulse.getBuffer();
      this.wet = Audanism.Audio.audioContext.createGain();
      this.wet.gain.value = this.wetAmount;
      this.rev.connect(this.wet);
      Reverb.__super__.constructor.call(this, this.rev, this.wet);
    }

    return Reverb;

  })(Audanism.Audio.FX.FX);

  window.Audanism.Audio.FX.Reverb = Reverb;

}).call(this);

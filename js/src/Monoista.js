// Generated by CoffeeScript 1.4.0

/*
	Monoism synth
*/


(function() {
  var Monoista;

  Monoista = (function() {

    function Monoista(note) {
      var envAttackEnd, now;
      this.note = note;
      this.effectChain = Audanism.Audio.audioContext.createGain();
      this.revNode = Audanism.Audio.audioContext.createGain();
      this.revGain = Audanism.Audio.audioContext.createGain();
      this.revGain.gain.value = 0.3;
      this.revBypassGain = Audanism.Audio.audioContext.createGain();
      this.volNode = Audanism.Audio.audioContext.createGain();
      this.volNode.gain.value = 0.25;
      this.effectChain.connect(this.revNode);
      this.effectChain.connect(this.revBypassGain);
      this.revNode.connect(this.revGain);
      this.revGain.connect(this.volNode);
      this.revBypassGain.connect(this.volNode);
      this.volNode.connect(Audanism.Audio.audioContext.destination);
      this.freq = Audanism.Audio.Harmonizer.getFreqFromNote(this.note);
      this.osc = Audanism.Audio.audioContext.createOscillator();
      this.osc.frequency.setValueAtTime(this.originalFrequency, 0);
      this.envelope = audioContext.createGain();
      this.osc.connect(this.envelope);
      this.envelope.connect(effectChain);
      this.asdr = new Audanism.Audio.ASDR(7, 15, 50, 20);
      now = Audanism.Audio.audioContext.currentTime;
      envAttackEnd = now + (this.asdr.attack / 10.0);
      this.envelope.gain.setValueAtTime(0.0, now);
      this.envelope.gain.linearRampToValueAtTime(1.0, envAttackEnd);
      this.envelope.gain.setTargetAtTime(this.asdr.sustain / 100.0, envAttackEnd, (this.asdr.decay / 100.0) + 0.001);
      this.osc.start(0);
    }

    Monoista.prototype.noteOn = function() {};

    Monoista.prototype.noteOff = function() {
      var now, release;
      now = Audanism.Audio.audioContext.currentTime;
      release = now + (this.asdr.release / 10.0);
      this.envelope.gain.cancelScheduledValues(now);
      this.envelope.gain.setValueAtTime(this.envelope.gain.value, now);
      this.envelope.gain.setTargetAtTime(0.0, now, this.asdr.release / 100);
      return this.osc.stop(release);
    };

    return Monoista;

  })();

  window.Audanism.Audio.Synthesizer.Monoista = Monoista;

}).call(this);

// Generated by CoffeeScript 1.4.0

/*
	Listens for Instagram pictures.
*/


(function() {
  var InstagramSourceAdapter,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  InstagramSourceAdapter = (function(_super) {

    __extends(InstagramSourceAdapter, _super);

    function InstagramSourceAdapter(listener) {
      this.listener = listener;
      InstagramSourceAdapter.__super__.constructor.call(this, this.listener);
      this.clientId = "f42a4ce0632e412ea5a0353c2b5e581f";
      this.photoSinceId = 0;
      this.tag = "audanism";
      this.queryUrl = "https://api.instagram.com/v1/tags/" + this.tag + "/media/recent";
      this.jqxhr = null;
      this.igGui = $('<div />', {
        'id': 'ig-photo'
      }).append('<img class="ig-photo" src="" /><span class="ig-caption">').appendTo($('#container'));
    }

    InstagramSourceAdapter.prototype.activate = function() {
      var _queryPhotos,
        _this = this;
      console.log('ISA activate');
      _this = this;
      _queryPhotos = this.queryPhotos;
      return setInterval(function() {
        return _this.queryPhotos.call(_this);
      }, 5000);
    };

    InstagramSourceAdapter.prototype.queryPhotos = function() {
      var _this = this;
      console.log('••• query instagram photots', this.queryUrl, '•••');
      if (this.jqxhr) {
        return;
      }
      return this.jqxhr = $.ajax({
        dataType: 'jsonp',
        url: this.queryUrl,
        data: {
          client_id: this.clientId,
          count: 1,
          max_id: this.photoSinceId
        },
        success: function(response) {
          console.log('did fetch data', response);
          return _this.parsePhotos(response.data);
        }
      });
    };

    InstagramSourceAdapter.prototype.parsePhotos = function(photos) {
      var caption, captionVals, i, influenceData, interpreter, modVal, photo, _i, _j, _len, _ref,
        _this = this;
      console.log('••• parse instagram photos •••');
      interpreter = new TextInterpreter;
      for (_i = 0, _len = photos.length; _i < _len; _i++) {
        photo = photos[_i];
        if (photo.id === this.photoSinceId) {
          console.log('   ## same photo, continue');
          continue;
        }
        this.photoSinceId = photo.id;
        if (!photo.caption) {
          console.log('   ## no caption, continue');
          continue;
        }
        caption = photo.caption.text;
        this.igGui.find('.ig-photo').attr('src', photo.images.thumbnail.url);
        this.igGui.find('.ig-caption').html(caption);
        this.igGui.fadeTo(50, 1);
        setTimeout(function() {
          return _this.igGui.fadeTo(1000, 0);
        }, 2000);
        captionVals = interpreter.getNumCharsInGroups(caption, 5);
        console.log('vals for text', caption, captionVals);
        for (i = _j = 0, _ref = captionVals.length - 1; 0 <= _ref ? _j <= _ref : _j >= _ref; i = 0 <= _ref ? ++_j : --_j) {
          if (!captionVals[i]) {
            continue;
          }
          modVal = Math.round(captionVals[i] * 10);
          modVal = Math.random() >= 0.5 ? modVal * -1 : modVal;
          influenceData = {
            'node': {
              'node': 'rand',
              'factor': i + 1,
              'valueModifier': modVal
            },
            'meta': {
              'current': i + 1,
              'total': captionVals.length
            }
          };
          console.log('....... influence data', influenceData);
          this.triggerInfluence(influenceData);
        }
      }
      return this.jqxhr = null;
    };

    InstagramSourceAdapter.prototype.adaptSourceData = function() {};

    return InstagramSourceAdapter;

  })(SourceAdapter);

  window.InstagramSourceAdapter = InstagramSourceAdapter;

}).call(this);

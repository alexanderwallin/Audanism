// Generated by CoffeeScript 1.4.0

/*
	Listens for Instagram pictures.
*/


(function() {
  var InstagramSourceAdapter,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  InstagramSourceAdapter = (function(_super) {

    __extends(InstagramSourceAdapter, _super);

    function InstagramSourceAdapter(interval, tag) {
      this.interval = interval != null ? interval : 5000;
      this.tag = tag != null ? tag : 'audanism';
      InstagramSourceAdapter.__super__.constructor.call(this, 'instagram', this.interval);
      this.clientId = "f42a4ce0632e412ea5a0353c2b5e581f";
      this.photoSinceId = 0;
      this.queryUrl = "https://api.instagram.com/v1/tags/" + this.tag + "/media/recent";
      this.jqxhr = null;
    }

    InstagramSourceAdapter.prototype.activate = function() {
      var _this = this;
      this.active = true;
      return this.queryInterval = setInterval(function() {
        return _this.queryPhotos();
      }, this.interval);
    };

    InstagramSourceAdapter.prototype.deactive = function() {
      this.active = false;
      return clearInterval(this.queryInterval);
    };

    InstagramSourceAdapter.prototype.queryPhotos = function() {
      var _this = this;
      if (this.jqxhr || !this.active) {
        return;
      }
      return this.jqxhr = $.ajax({
        dataType: 'jsonp',
        url: this.queryUrl,
        data: {
          client_id: this.clientId,
          count: 1,
          max_id: this.photoSinceId
        },
        success: function(response) {
          return _this.processPhotos(response.data);
        }
      });
    };

    InstagramSourceAdapter.prototype.processPhotos = function(photos) {
      var caption, captionVals, i, influenceData, influenceDataList, interpreter, modVal, photo, _i, _j, _len, _ref;
      interpreter = new Audanism.Util.TextInterpreter;
      influenceDataList = [];
      for (_i = 0, _len = photos.length; _i < _len; _i++) {
        photo = photos[_i];
        if (photo.id === this.photoSinceId) {
          continue;
        }
        this.photoSinceId = photo.id;
        if (!photo.caption) {
          continue;
        }
        caption = photo.caption.text;
        captionVals = interpreter.getNumCharsInGroups(caption, 5);
        for (i = _j = 0, _ref = captionVals.length - 1; 0 <= _ref ? _j <= _ref : _j >= _ref; i = 0 <= _ref ? ++_j : --_j) {
          if (!captionVals[i]) {
            continue;
          }
          modVal = Math.round(captionVals[i] * 20);
          modVal = Math.random() >= 0.5 ? -modVal : modVal;
          influenceData = {
            'node': {
              'node': 'rand',
              'factor': i + 1,
              'valueModifier': modVal
            },
            'meta': {
              'current': i + 1,
              'total': captionVals.length,
              'source': this.sourceId,
              'sourceData': photo
            }
          };
          influenceDataList.push(influenceData);
          EventDispatcher.trigger('audanism/influence', influenceData);
        }
      }
      if (influenceDataList.length > 0) {
        EventDispatcher.trigger('audanism/influence/node/done', [influenceDataList]);
      }
      return this.jqxhr = null;
    };

    return InstagramSourceAdapter;

  })(Audanism.SourceAdapter.SourceAdapter);

  window.Audanism.SourceAdapter.InstagramSourceAdapter = InstagramSourceAdapter;

}).call(this);

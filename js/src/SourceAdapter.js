// Generated by CoffeeScript 1.4.0

/*
	Source adapter super class.

	A source adapater listens to any type of outer data feed
	and adapts it to data interpretable to the environment.
*/


(function() {
  var SourceAdapter;

  SourceAdapter = (function() {

    function SourceAdapter(sourceId, interval) {
      this.sourceId = sourceId;
      this.interval = interval != null ? interval : 5000;
      this.active = false;
    }

    SourceAdapter.prototype.activate = function() {
      return this.active = true;
    };

    SourceAdapter.prototype.deactivate = function() {
      return this.active = false;
    };

    SourceAdapter.prototype.setInterval = function(interval) {
      this.interval = interval;
    };

    SourceAdapter.prototype.getAdaptedSourceData = function(sourceData) {
      var influenceData;
      return influenceData = {
        'factors': [
          {
            'factor': null,
            'valueModifier': null
          }
        ],
        'node': [
          {
            'node': null,
            'factorType': null,
            'valueModifier': 0
          }
        ],
        'random': [
          {
            'object': 'node',
            'num': [0, 1],
            'valueModifier': [0, 1]
          }
        ]
      };
    };

    SourceAdapter.prototype.triggerInfluence = function(influenceData) {
      if (this.listener.influence != null) {
        return this.listener.influence(influenceData);
      }
    };

    return SourceAdapter;

  })();

  window.Audanism.SourceAdapter.SourceAdapter = SourceAdapter;

}).call(this);

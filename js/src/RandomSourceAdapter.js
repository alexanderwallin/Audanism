// Generated by CoffeeScript 1.10.0

/*
	Alters the factor and/or node values randomly
 */

(function() {
  var RandomSourceAdapter,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  RandomSourceAdapter = (function(superClass) {
    extend(RandomSourceAdapter, superClass);

    RandomSourceAdapter.TIME_INTERVAL_ALTER_FACTORS = 2000;

    RandomSourceAdapter.PROBABILITY_ALTER_FACTORS = 1;

    RandomSourceAdapter.TIME_INTERVAL_ALTER_NODES = 500;

    RandomSourceAdapter.PROBABILITY_ALTER_NODES = 1;

    function RandomSourceAdapter(listener) {
      this.listener = listener;
      RandomSourceAdapter.__super__.constructor.call(this, this.listener);
    }

    RandomSourceAdapter.prototype.activate = function() {
      setInterval((function(_this) {
        return function() {
          return _this.tryAlterFactors();
        };
      })(this), RandomSourceAdapter.TIME_INTERVAL_ALTER_FACTORS);
      return setInterval((function(_this) {
        return function() {
          return _this.tryAlterNodes();
        };
      })(this), RandomSourceAdapter.TIME_INTERVAL_ALTER_NODES);
    };

    RandomSourceAdapter.prototype.getAdaptedSourceData = function(sourceData) {
      return sourceData;
    };

    RandomSourceAdapter.prototype.tryAlterFactors = function() {
      if (Math.floor((Math.random() + 1) / RandomSourceAdapter.PROBABILITY_ALTER_FACTORS) === 1) {
        return this.triggerInfluence({
          'random': {
            'object': 'factor',
            'num': 1,
            'valueModifier': 'rand'
          }
        });
      }
    };

    RandomSourceAdapter.prototype.tryAlterNodes = function() {
      if (Math.randomRange(Math.round(1 / RandomSourceAdapter.PROBABILITY_ALTER_NODES)) === 1) {
        return this.triggerInfluence({
          'random': {
            'object': 'node',
            'num': 'rand',
            'valueModifier': 'rand'
          }
        });
      }
    };

    return RandomSourceAdapter;

  })(Audanism.SourceAdapter.SourceAdapter);

  window.Audanism.SourceAdapter.RandomSourceAdapter = RandomSourceAdapter;

}).call(this);

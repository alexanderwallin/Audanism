// Generated by CoffeeScript 1.4.0
(function() {

  window.randomInt = function(lower, upper) {
    var start, _ref, _ref1;
    if (upper == null) {
      upper = 0;
    }
    start = Math.random();
    if (!(lower != null)) {
      _ref = [0, lower], lower = _ref[0], upper = _ref[1];
    }
    if (lower > upper) {
      _ref1 = [upper, lower], lower = _ref1[0], upper = _ref1[1];
    }
    return Math.floor(start * (upper - lower + 1) + lower);
  };

  window.logWithBase = function(base, num) {
    return Math.log(num) / Math.log(base);
  };

  /*
  	Decimal adjustment of a number.
  
  	@param	{String}	type	The type of adjustment.
  	@param	{Number}	value	The number.
  	@param	{Integer}	exp		The exponent (the 10 logarithm of the adjustment base).
  	@returns	{Number}			The adjusted value.
  */


  window.decimalAdjust = function(type, value, exp) {
    if (typeof exp === 'undefined' || +exp === 0) {
      return Math[type](value);
    }
    value = +value;
    exp = +exp;
    if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {
      return NaN;
    }
    value = value.toString().split('e');
    value = Math[type](+(value[0] + 'e' + (value[1] ? +value[1] - exp : -exp)));
    value = value.toString().split('e');
    return +(value[0] + 'e' + (value[1] ? +value[1] + exp : exp));
  };

  if (!(Math.round10 != null)) {
    Math.round10 = function(value, exp) {
      return decimalAdjust('round', value, exp);
    };
  }

  if (!(Math.floor10 != null)) {
    Math.floor10 = function(value, exp) {
      return decimalAdjust('floor', value, exp);
    };
  }

  if (!(Math.ceil10 != null)) {
    Math.ceil10 = function(value, exp) {
      return decimalAdjust('ceil', value, exp);
    };
  }

  window.numberSuffixed = function(number, decimalAdjust) {
    var numAdjusted, suffix;
    suffix = '';
    if (number >= 1000000000) {
      suffix = 'g';
      number /= 1000000000;
    } else if (number >= 1000000) {
      suffix = 'm';
      number /= 1000000;
    } else if (number >= 1000) {
      suffix = 'k';
      number /= 1000;
    }
    numAdjusted = Math.round10(number, decimalAdjust);
    return numAdjusted + suffix;
  };

}).call(this);

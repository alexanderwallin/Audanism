// Generated by CoffeeScript 1.4.0
(function() {
  var NodeComparer;

  NodeComparer = (function() {

    function NodeComparer() {}

    NodeComparer.COMPARISON_MODE_UNKNOWN = 0;

    NodeComparer.COMPARISON_MODE_FACTOR_HARMONY = 1;

    NodeComparer.COMPARISON_MODE_ORGANISM_HARMONY = 2;

    NodeComparer.alterNodesInComparisonMode = function(nodes, comparisonMode) {
      if (comparisonMode === NodeComparer.COMPARISON_MODE_FACTOR_HARMONY) {
        return this._alterNodesUsingFactorHarmonyComparison(nodes);
      } else {
        return this._alterNodesUsingOrganismHarmonyComparison(nodes);
      }
    };

    NodeComparer._alterNodesUsingFactorHarmonyComparison = function(nodes) {
      var aCell, bCell, node, _i, _j, _len, _len1, _ref, _results;
      for (_i = 0, _len = nodes.length; _i < _len; _i++) {
        node = nodes[_i];
        $(".node[data-node-id=" + node.nodeId + "]").addClass('comparing');
      }
      _ref = nodes[0].getCells();
      _results = [];
      for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
        aCell = _ref[_j];
        _results.push((function() {
          var _k, _len2, _ref1, _results1;
          _ref1 = nodes[1].getCells();
          _results1 = [];
          for (_k = 0, _len2 = _ref1.length; _k < _len2; _k++) {
            bCell = _ref1[_k];
            if (aCell.factorType === bCell.factorType) {
              console.log("      alter factor " + aCell.factorType + " for cells in " + nodes[0].nodeId + " and " + nodes[1].nodeId);
              _results1.push(FactorComparer.getFactorDisharmonyForNodes);
            } else {
              _results1.push(void 0);
            }
          }
          return _results1;
        })());
      }
      return _results;
    };

    NodeComparer._alterNodesUsingOrganismHarmonyComparison = function(nodes) {};

    return NodeComparer;

  })();

  window.Audanism.Calculator.NodeComparer = NodeComparer;

}).call(this);

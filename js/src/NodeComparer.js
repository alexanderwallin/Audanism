// Generated by CoffeeScript 1.10.0
(function() {
  var NodeComparer;

  NodeComparer = (function() {
    function NodeComparer() {}

    NodeComparer.COMPARISON_MODE_UNKNOWN = 0;

    NodeComparer.COMPARISON_MODE_FACTOR_HARMONY = 1;

    NodeComparer.COMPARISON_MODE_ORGANISM_HARMONY = 2;

    NodeComparer.alterNodesInComparisonMode = function(nodes, comparisonMode) {
      if (comparisonMode === NodeComparer.COMPARISON_MODE_FACTOR_HARMONY) {
        return this._alterNodesUsingFactorHarmonyComparison(nodes);
      } else {
        return this._alterNodesUsingOrganismHarmonyComparison(nodes);
      }
    };

    NodeComparer._alterNodesUsingFactorHarmonyComparison = function(nodes) {
      var aCell, bCell, i, j, len, len1, node, ref, results;
      for (i = 0, len = nodes.length; i < len; i++) {
        node = nodes[i];
        $(".node[data-node-id=" + node.nodeId + "]").addClass('comparing');
      }
      ref = nodes[0].getCells();
      results = [];
      for (j = 0, len1 = ref.length; j < len1; j++) {
        aCell = ref[j];
        results.push((function() {
          var k, len2, ref1, results1;
          ref1 = nodes[1].getCells();
          results1 = [];
          for (k = 0, len2 = ref1.length; k < len2; k++) {
            bCell = ref1[k];
            if (aCell.factorType === bCell.factorType) {
              console.log("      alter factor " + aCell.factorType + " for cells in " + nodes[0].nodeId + " and " + nodes[1].nodeId);
              results1.push(FactorComparer.getFactorDisharmonyForNodes);
            } else {
              results1.push(void 0);
            }
          }
          return results1;
        })());
      }
      return results;
    };

    NodeComparer._alterNodesUsingOrganismHarmonyComparison = function(nodes) {};

    return NodeComparer;

  })();

  window.Audanism.Calculator.NodeComparer = NodeComparer;

}).call(this);

(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var AudioContext;AudioContext=window.AudioContext||window.webkitAudioContext,module.exports=AudioContext?new AudioContext:null;

},{}],2:[function(require,module,exports){
var AudioContext,Conductor,Constants,Drone,EventDispatcher,Harmonizer,NoisePink,Pad,PercArpeggiator,Reverb,TestInstrument;Constants=require("../environment/Constants.coffee"),EventDispatcher=require("../event/EventDispatcher.coffee"),AudioContext=require("./AudioContext.coffee"),NoisePink=require("./instrument/NoisePink.coffee"),Drone=require("./instrument/Drone.coffee"),TestInstrument=require("./instrument/TestInstrument.coffee"),Pad=require("./instrument/Pad.coffee"),PercArpeggiator=require("./instrument/PercArpeggiator.coffee"),Reverb=require("./fx/Reverb.coffee"),Harmonizer=require("./module/Harmonizer.coffee"),Conductor=function(){function t(){var t;AudioContext||alert("Sorry, your browser does not support AudioContext, try Chrome!"),this.isMuted=!1,this.createEndChain(),this.noise=new NoisePink(this.instrumentsIn),this.noise.setLpfFrequency(1e3),this.factorDrones=function(){var e,n,o;for(o=[],t=e=0,n=Constants.NUM_FACTORS-1;n>=0?n>=e:e>=n;t=n>=0?++e:--e)o.push(new Drone(this.instrumentsIn));return o}.call(this),this.compareInstr=new TestInstrument(this.instrumentsIn),this.influencePad=new Pad(this.instrumentsIn),this.arpeggiator=new PercArpeggiator(this.instrumentsIn,4,0),EventDispatcher.listen("audanism/controls/togglesound",this,this.toggleMute),EventDispatcher.listen("audanism/iteration",this,this.updateSounds),EventDispatcher.listen("audanism/influence/node",this,this.handleNodeInfluence),EventDispatcher.listen("audanism/alter/nodes",this,this.handleNodeComparison),EventDispatcher.listen("audanism/performance/bad",this,this.onPermanceBad),EventDispatcher.listen("audanism/organism/stressmode",this,this.onStressModeChange)}return t.prototype.createEndChain=function(){return this["void"]=AudioContext.createOscillator(),this["void"].frequency.value=440,this.voidGain=AudioContext.createGain(),this.voidGain.gain.value=0,this.instrumentsIn=AudioContext.createGain(),this.instrumentsIn.gain.value=.2,this.masterRev=new Reverb(2,50,1),this.compressor=AudioContext.createDynamicsCompressor(),this.compressor.threshold.value=-24,this.compressor.ratio.value=6,this.analyser=AudioContext.createAnalyser(),this.analyser.fftSize=512,this["void"].connect(this.voidGain),this.voidGain.connect(this.instrumentsIn),this["void"].start(0),this.instrumentsIn.connect(this.masterRev["in"]),this.masterRev.out.connect(this.compressor),this.instrumentsIn.connect(this.compressor),this.compressor.connect(this.analyser),this.analyser.connect(AudioContext.destination)},t.prototype.getFrequencyData=function(){var t;return t=new Uint8Array(this.analyser.frequencyBinCount),this.analyser.getByteFrequencyData(t),t},t.prototype.setOrganism=function(t){this.organism=t},t.prototype.mute=function(){var t,e,n,o,r,s,i,a;for(console.log("Conductor #mute()"),this.isMuted=!0,this.arpeggiator.stop(),s=this.factorDrones,e=0,o=s.length;o>e;e++)t=s[e],t.notesOff();for(i=this.factorDrones,a=[],n=0,r=i.length;r>n;n++)t=i[n],a.push(t.kill());return a},t.prototype.unmute=function(){var t,e,n,o,r;for(console.log("Conductor #unmute()"),this.isMuted=!1,this.arpeggiator.start(),o=this.factorDrones,r=[],e=0,n=o.length;n>e;e++)t=o[e],r.push(t.noteOn(t.droneNote));return r},t.prototype.toggleMute=function(){return console.log("Conductor #toggleMute"),this.isMuted?this.unmute():this.mute(),console.log("... now muted:",this.isMuted)},t.prototype.updateSounds=function(t){var e,n,o,r,s,i,a,u,h,c,d;if(!this.isMuted){for(i=this.organism.getFactors(),a=0,d=this.factorDrones,u=0,h=d.length;h>u;u++)s=d[u],c=Harmonizer.getNoteFromFreq(i[a].disharmony/10),1===t.count?s.noteOn(c):s.setNote(c),a++;if(t.count%10!==!0)return e=this.organism.getDisharmonyHistoryData(200),n=e[e.length-1][2],o=e[0][2],r=n/o,null!=this.noise&&this.noise.setLpfFrequency(1e3*r),t.count%4===1&&(this.arpeggiator.midNote+=r>1?1:-1),t.count%9===1&&e.length>1&&(this.arpeggiator.shuffleAmount=.01*(Math.round(n)%100)),t.count%10===1?this.arpeggiator.setFrequency(Math.max(6,r)):void 0}},t.prototype.handleNodeComparison=function(t){var e,n,o,r,s,i,a;if(!this.isMuted){for(a=[],n=o=0,i=t.nodes.length-1;i>=0?i>=o:o>=i;n=i>=0?++o:--o)r=t.nodes[n],e=90+Math.pow(r.getCell(t.factorType).factorValue,1.3),s=Harmonizer.getNoteFromFreq(e),a.push(this.compareInstr.noteOn(s));return a}},t.prototype.handleNodeInfluence=function(t){var e,n,o;if(!this.isMuted&&this.organism&&t.meta)return n=t.node.node.nodeId,e=80+40*n,o=n/this.organism.getNodes().length,this.influencePad.noteOn(Harmonizer.getNoteFromFreq(e))},t.prototype.onStressModeChange=function(t){var e,n,o,r,s;for(r=this.factorDrones,s=[],n=0,o=r.length;o>n;n++)e=r[n],s.push(e.setUnison(!t));return s},t.prototype.onPermanceBad=function(){var t;if(!this.isMuted)return this.mute(),t=this.arpeggiator.frequency,this.arpeggiator.setFrequency(.2),setTimeout(function(e){return function(){return e.unmute(),e.arpeggiator.setFrequency(t)}}(this),1e4)},t}(),module.exports=Conductor;

},{"../environment/Constants.coffee":23,"../event/EventDispatcher.coffee":26,"./AudioContext.coffee":1,"./fx/Reverb.coffee":4,"./instrument/Drone.coffee":5,"./instrument/NoisePink.coffee":7,"./instrument/Pad.coffee":8,"./instrument/PercArpeggiator.coffee":9,"./instrument/TestInstrument.coffee":10,"./module/Harmonizer.coffee":12}],3:[function(require,module,exports){
var FX;FX=function(){function t(t,n){this["in"]=t,this.out=n}return t}(),module.exports=FX;

},{}],4:[function(require,module,exports){
var AudioContext,FX,Impulse,Reverb,extend=function(e,t){function o(){this.constructor=e}for(var s in t)hasProp.call(t,s)&&(e[s]=t[s]);return o.prototype=t.prototype,e.prototype=new o,e.__super__=t.prototype,e},hasProp={}.hasOwnProperty;AudioContext=require("../AudioContext.coffee"),FX=require("./FX.coffee"),Impulse=require("../module/Impulse.coffee"),Reverb=function(e){function t(e,o,s){this.seconds=e,this.decay=o,this.wetAmount=s,null==this.seconds&&(this.seconds=1),null==this.decay&&(this.decay=.5),null==this.wetAmount&&(this.wetAmount=1),this.impulse=new Impulse(this.seconds,this.decay),this.rev=AudioContext.createConvolver(),this.rev.buffer=this.impulse.getBuffer(),this.wet=AudioContext.createGain(),this.wet.gain.value=this.wetAmount,this.rev.connect(this.wet),t.__super__.constructor.call(this,this.rev,this.wet)}return extend(t,e),t}(FX),module.exports=Reverb;

},{"../AudioContext.coffee":1,"../module/Impulse.coffee":13,"./FX.coffee":3}],5:[function(require,module,exports){
var Drone,Instrument,extend=function(t,n){function e(){this.constructor=t}for(var r in n)hasProp.call(n,r)&&(t[r]=n[r]);return e.prototype=n.prototype,t.prototype=new e,t.__super__=n.prototype,t},hasProp={}.hasOwnProperty;Instrument=require("./Instrument.coffee"),Drone=function(t){function n(t,e){var r;this.instrumentsIn=t,this.unison=null!=e?e:!0,n.__super__.constructor.call(this,this.instrumentsIn,"MonoistEnvModWide",!1),this.autoPans=function(){var t,n,e;for(e=[],r=t=0,n=this.voices.length-1;n>=0?n>=t:t>=n;r=n>=0?++t:--t)e.push(null);return e}.call(this),this.vibrates=function(){var t,n,e;for(e=[],r=t=0,n=this.voices.length-1;n>=0?n>=t:t>=n;r=n>=0?++t:--t)e.push(null);return e}.call(this),this.droneNote=0}return extend(n,t),n.prototype.setNote=function(t){var n,e,r,o,s,i,a,u,l;for(this.droneNote=t,i=this.voices,u=[],n=0,r=i.length;r>n;n++)if(l=i[n]){for(a=l.oscillators,e=0,o=a.length;o>e;e++)s=a[e],s.frequency.value=Audanism.Audio.Module.Harmonizer.getFreqFromNote(t);u.push(l.setUnison(this.unison))}else u.push(void 0);return u},n.prototype.setUnison=function(t){var n,e,r,o,s;for(this.unison=t,r=this.voices,o=[],n=0,e=r.length;e>n;n++)s=r[n],s?o.push(s.setUnison(this.unison)):o.push(void 0);return o},n.prototype.onNoteOn=function(t){var n;return this.setUnison(this.unison),n={note:t,frame:-1,interval:null,speed:.1+1.3*Math.random(),maxGain:this.voices[t].masterVol.gain.value},this.voices[t].masterVol.gain.value=0,n.interval=setInterval(function(e){return function(){var r,o,s;try{return n.frame++,r=(1+Math.sin(n.speed/2*(n.frame/10)-Math.PI/2))/2,e.voices[t].masterVol.gain.value=n.maxGain*r}catch(s){o=s}}}(this),100),this.vibrates[t]=n},n.prototype.onNoteOff=function(t){return this.autoPans[t]&&(clearInterval(this.autoPans[t].interval),this.autoPans[t]=null),this.vibrates[t]?(clearInterval(this.vibrates[t].interval),this.vibrates[t]=null):void 0},n.prototype.kill=function(){var t,n,e,r,o;for(e=this.vibrates,r=[],t=0,n=e.length;n>t;t++)o=e[t],o&&(o.interval?r.push(clearInterval(o.interval)):r.push(void 0));return r},n}(Instrument),module.exports=Drone;

},{"./Instrument.coffee":6}],6:[function(require,module,exports){
var Instrument,synthesizers;synthesizers={Monoist:require("../synthesizer/Monoist.coffee"),MonoistEnv:require("../synthesizer/MonoistEnv.coffee"),MonoistEnvMod:require("../synthesizer/MonoistEnvMod.coffee"),MonoistEnvModWide:require("../synthesizer/MonoistEnvModWide.coffee"),MonoistEnvMulti:require("../synthesizer/MonoistEnvMulti.coffee"),MonoistPerc:require("../synthesizer/MonoistPerc.coffee")},Instrument=function(){function e(e,t,o){var n;this.instrumentsIn=e,this.synthesizer=t,this.autoRelease=o,null==this.autoRelease&&(this.autoRelease=!0),this.voices=function(){var e,t;for(t=[],n=e=0;120>=e;n=++e)t.push(null);return t}(),this.noteTimers=function(){var e,t;for(t=[],n=e=0;120>=e;n=++e)t.push(null);return t}()}return e.prototype.createVoice=function(e){return this.beforeCreateVoice&&this.beforeCreateVoice(e),this.voices[e]||(this.voices[e]=new synthesizers[this.synthesizer](e),this.setupVoice&&this.setupVoice(this.voices[e]),this.voices[e].masterVol.connect(this.instrumentsIn)),this.voices[e]},e.prototype.killVoiceAtNote=function(e){return this.voices[e]?setTimeout(function(t){return function(){return t.voices[e]=null}}(this),1e3*this.voices[e].asdr.getEnvelopeDuration()+1):void 0},e.prototype.noteOn=function(e,t){var o,n;return this.noteTimers[e]&&(clearTimeout(this.noteTimers[e]),this.noteTimers[e]=null),n=this.createVoice(e),null==t&&(t=0),o=this.autoRelease?t:-1,n.noteOn(o),this.autoRelease&&(this.noteTimers[e]=setTimeout(function(t){return function(){return t.voices[e].stop(),t.voices[e].masterVol.disconnect(0),t.voices[e]=null,clearTimeout(t.noteTimers[e]),t.noteTimers[e]=null,t.onNoteOff?t.onNoteOff(e):void 0}}(this),1e3*n.asdr.getEnvelopeDuration()+10)),this.onNoteOn?this.onNoteOn(e,t):void 0},e.prototype.notesOff=function(){var e,t,o,n,i,s;for(n=this.voices,i=[],e=0,t=n.length;t>e;e++)s=n[e],s&&(o=s.note,s.noteOff(),i.push(setTimeout(function(e){return function(){return e.voices[o]=null,clearTimeout(e.noteTimers[o]),e.noteTimers[o]=null,e.onNoteOff?e.onNoteOff(o):void 0}}(this),s.asdr.release+1)));return i},e}(),module.exports=Instrument;

},{"../synthesizer/Monoist.coffee":14,"../synthesizer/MonoistEnv.coffee":15,"../synthesizer/MonoistEnvMod.coffee":16,"../synthesizer/MonoistEnvModWide.coffee":17,"../synthesizer/MonoistEnvMulti.coffee":18,"../synthesizer/MonoistPerc.coffee":19}],7:[function(require,module,exports){
var AudioContext,Instrument,NoisePink,extend=function(t,e){function n(){this.constructor=t}for(var o in e)hasProp.call(e,o)&&(t[o]=e[o]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t},hasProp={}.hasOwnProperty;AudioContext=require("../AudioContext.coffee"),Instrument=require("./Instrument.coffee"),NoisePink=function(t){function e(t){this.instrumentsIn=t,e.__super__.constructor.call(this,this.instrumentsIn,null,!1),this.createNoise()}return extend(e,t),e.prototype.createNoise=function(){var t,e;return e=4096,t=function(){var t,n,o,i,r,s,u,c;return t=n=o=i=r=s=u=0,c=AudioContext.createScriptProcessor(e,1,1),c.onaudioprocess=function(c){return function(c){var p,a,f,h,l,y;for(f=c.outputBuffer.getChannelData(0),l=[],p=a=0,h=e-1;h>=0?h>=a:a>=h;p=h>=0?++a:--a)y=2*Math.random()-1,t=.99886*t+.0555179*y,n=.99332*n+.0750759*y,o=.969*o+.153852*y,i=.8665*i+.3104856*y,r=.55*r+.5329522*y,s=-.7616*s-.016898*y,f[p]=t+n+o+i+r+s+u+.5362*y,f[p]*=.11,l.push(u=.115926*y);return l}}(this),c},this.noiseVol=AudioContext.createGain(),this.noiseVol.gain.value=.1,this.noiseLpf=AudioContext.createBiquadFilter(),this.noiseLpf.type="lowpass",this.noiseLpf.frequency.value=1e4,this.noise=t(),this.noise.connect(this.noiseLpf),this.noiseLpf.connect(this.noiseVol),this.noiseVol.connect(this.instrumentsIn)},e.prototype.start=function(){return this.noiseVol.gain.value=.1},e.prototype.stop=function(){return this.noiseVol.gain.value=0},e.prototype.setLpfFrequency=function(t){return this.noiseLpf.frequency.value=t},e}(Instrument),module.exports=NoisePink;

},{"../AudioContext.coffee":1,"./Instrument.coffee":6}],8:[function(require,module,exports){
var Instrument,Pad,extend=function(t,n){function r(){this.constructor=t}for(var o in n)hasProp.call(n,o)&&(t[o]=n[o]);return r.prototype=n.prototype,t.prototype=new r,t.__super__=n.prototype,t},hasProp={}.hasOwnProperty;Instrument=require("./Instrument.coffee"),Pad=function(t){function n(t){this.instrumentsIn=t,n.__super__.constructor.call(this,this.instrumentsIn,"MonoistEnvMod")}return extend(n,t),n.prototype.setupVoice=function(t){return t.pan.setPosition(1-2*Math.random(),0,1-2*Math.random())},n.prototype.playChord=function(t){var n,r,o,e,s;for(e=[t-12,t,t+7,t+10,t+15],s=[],n=0,r=e.length;r>n;n++)o=e[n],s.push(this.noteOn(o));return s},n}(Instrument),module.exports=Pad;

},{"./Instrument.coffee":6}],9:[function(require,module,exports){
var Instrument,PercArpeggiator,randomInt,extend=function(t,e){function n(){this.constructor=t}for(var i in e)hasProp.call(e,i)&&(t[i]=e[i]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t},hasProp={}.hasOwnProperty;Instrument=require("./Instrument.coffee"),randomInt=require("../../util/utilities.coffee").randomInt,PercArpeggiator=function(t){function e(t,n,i){this.instrumentsIn=t,this.frequency=n,this.shuffleAmount=i,e.__super__.constructor.call(this,this.instrumentsIn,"MonoistPerc",!0),null==this.frequency&&(this.frequency=1),null==this.shuffleAmount&&(this.shuffleAmount=.333),this.fixedShuffle=!1,this.intervalTime=1/this.frequency,this.midNote=80,this.noteSpread=60,this.interval=null,this.count=0,this.isRunning=!1,this.shouldRestart=!1,this.hpfVal=0,this.lpfVal=2e4}return extend(e,t),e.prototype.setFrequency=function(t){return this.frequency=t,this.intervalTime=1/this.frequency,this.shouldRestart=!0},e.prototype.beforeCreateVoice=function(t){return this.voices[t]?this.voices[t]=null:void 0},e.prototype.setupVoice=function(t){return t.pan.setPosition(1-2*Math.random(),0,1-2*Math.random()),t.waitTime=this.count%2===0||!this.fixedShuffle&&0===randomInt(0,1)?this.shuffleAmount*this.intervalTime:0,t.hpf.frequency.value=this.hpfVal,t.lpf.frequency.value=this.lpfVal,t.modGain2.gain.value=.5*(1+Math.sin(this.count/(100*this.intervalTime)-Math.PI/2))*t.modGain2.gain.value,t.masterVol.gain.value=.3},e.prototype.start=function(){return this.isRunning=!0,this.interval&&this.stop(),this.interval=setInterval(function(t){return function(){return t.count++,t.hit()}}(this),1e3*this.intervalTime)},e.prototype.stop=function(){return this.isRunning=!1,clearInterval(this.interval),this.interval=null},e.prototype.hit=function(){return this.shouldRestart?(this.stop(),this.start(),this.shouldRestart=!1):this.noteOn(this.midNote-randomInt(0,this.noteSpread)),this.count++},e.prototype.onNoteOn=function(t){return this.count++},e.prototype.onNoteOff=function(t){},e}(Instrument),module.exports=PercArpeggiator;

},{"../../util/utilities.coffee":38,"./Instrument.coffee":6}],10:[function(require,module,exports){
var Instrument,TestInstrument,extend=function(t,n){function e(){this.constructor=t}for(var r in n)hasProp.call(n,r)&&(t[r]=n[r]);return e.prototype=n.prototype,t.prototype=new e,t.__super__=n.prototype,t},hasProp={}.hasOwnProperty;Instrument=require("./Instrument.coffee"),TestInstrument=function(t){function n(t){this.instrumentsIn=t,n.__super__.constructor.call(this,this.instrumentsIn,"MonoistEnv",!0)}return extend(n,t),n.prototype.setupVoice=function(t){return t.masterVol.gain.value=.1,t.pan.setPosition(1-2*Math.random(),0,1-2*Math.random())},n}(Instrument),module.exports=TestInstrument;

},{"./Instrument.coffee":6}],11:[function(require,module,exports){
var ASDR;ASDR=function(){function t(t,e,i,s){this.attack=t,this.decay=e,this.sustain=i,this.release=s}return t.prototype.set=function(t,e,i,s){this.attack=t,this.decay=e,this.sustain=i,this.release=s},t.prototype.getTimeUntilRelease=function(){return this.attack+this.decay},t.prototype.getEnvelopeDuration=function(){return this.attack+this.decay+this.release},t}(),module.exports=ASDR;

},{}],12:[function(require,module,exports){
var Harmonizer,Utils;Utils=require("../../util/utilities.coffee"),Harmonizer=function(){function r(){}return r.SCALE_MAJOR=[0,2,4,5,7,9,11],r.SCALE_MINOR=[0,2,3,5,7,9,10],r.getFreqFromNote=function(o,t){var e,n,i,u,a;if(null==t&&(t="minor"),o=440*Math.pow(2,(o-69)/12),t&&"minor"===t)for(o=Math.round(o),e=Math.abs(o-69)%12,a=r.SCALE_MINOR,n=0,i=a.length;i>n&&(u=a[n],o!==u);n++)o+=1;return t&&"major"===t&&console.log(),o},r.getNoteFromFreq=function(r){return Math.round(12*Utils.logWithBase(2,r/440)+69)},r}(),module.exports=Harmonizer;

},{"../../util/utilities.coffee":38}],13:[function(require,module,exports){
var AudioContext,Impulse;AudioContext=require("../AudioContext.coffee"),Impulse=function(){function e(e,t,s){var i,o,r,n,u,a,h,d;for(this.seconds=e,this.decay=t,this.reverse=s,null==this.reverse&&(this.reverse=!1),h=AudioContext.sampleRate,u=h*this.seconds,this.impulse=AudioContext.createBuffer(2,u,h),o=this.impulse.getChannelData(0),r=this.impulse.getChannelData(1),i=n=0,d=u-1;d>=0?d>=n:n>=d;i=d>=0?++n:--n)a=this.reverse?u-i:i,o[i]=(1-2*Math.random())*Math.pow(1-a/u,this.decay),r[i]=(1-2*Math.random())*Math.pow(1-a/u,this.decay)}return e.prototype.getBuffer=function(){return this.impulse},e}(),module.exports=Impulse;

},{"../AudioContext.coffee":1}],14:[function(require,module,exports){
var AudioContext,Monoist;AudioContext=require("../AudioContext.coffee"),Monoist=function(){function t(t){this.note=t,this.effectChain=AudioContext.createGain(),this.volNode=AudioContext.createGain(),this.volNode.gain.value=.25,this.effectChain.connect(this.volNode),this.volNode.connect(AudioContext.destination),this.freq=Audanism.Audio.Harmonizer.getFreqFromNote(this.note),this.osc=AudioContext.createOscillator(),this.osc.frequency.setValueAtTime(this.freq,0),this.osc.connect(this.effectChain),this.osc.start(0)}return t.prototype.noteOn=function(t){return this.osc.frequency.setValueAtTime(Audanism.Audio.Harmonizer.getFreqFromNote(t),0)},t.prototype.noteOff=function(){return this.osc.stop(AudioContext.currentTime+.1)},t}(),module.exports=Monoist;

},{"../AudioContext.coffee":1}],15:[function(require,module,exports){
var ASDR,AudioContext,Harmonizer,MonoistEnv,Voice,extend=function(e,o){function t(){this.constructor=e}for(var i in o)hasProp.call(o,i)&&(e[i]=o[i]);return t.prototype=o.prototype,e.prototype=new t,e.__super__=o.prototype,e},hasProp={}.hasOwnProperty;AudioContext=require("../AudioContext.coffee"),Voice=require("./Voice.coffee"),ASDR=require("../module/ASDR.coffee"),Harmonizer=require("../module/Harmonizer.coffee"),MonoistEnv=function(e){function o(e){o.__super__.constructor.call(this,e),this.asdr=new ASDR(.2,.1,.7,.2),this.envelope=AudioContext.createGain(),this.envelope.gain.setValueAtTime(0,0),this.envelopes.push(this.envelope),this.osc=AudioContext.createOscillator(),this.osc.type="sine",this.osc.frequency.value=Harmonizer.getFreqFromNote(this.note),this.oscillators.push(this.osc),this.osc.connect(this.envelope),this.envelope.connect(this.pan),this.osc.start(0)}return extend(o,e),o}(Voice),module.exports=MonoistEnv;

},{"../AudioContext.coffee":1,"../module/ASDR.coffee":11,"../module/Harmonizer.coffee":12,"./Voice.coffee":20}],16:[function(require,module,exports){
var ASDR,AudioContext,Harmonizer,MonoistEnvMod,Voice,extend=function(e,t){function o(){this.constructor=e}for(var i in t)hasProp.call(t,i)&&(e[i]=t[i]);return o.prototype=t.prototype,e.prototype=new o,e.__super__=t.prototype,e},hasProp={}.hasOwnProperty;AudioContext=require("../AudioContext.coffee"),Voice=require("./Voice.coffee"),ASDR=require("../module/ASDR.coffee"),Harmonizer=require("../module/Harmonizer.coffee"),MonoistEnvMod=function(e){function t(e){t.__super__.constructor.call(this,e),this.asdr=new ASDR(.03,.01,100,1.5),this.envelope1=AudioContext.createGain(),this.envelope1.gain.setValueAtTime(0,0),this.envelope1.connect(this.pan),this.envelopes.push(this.envelope1),this.osc1=AudioContext.createOscillator(),this.osc1.type=this.getRandomOscType(),this.osc1.frequency.value=Harmonizer.getFreqFromNote(this.note),this.osc1.connect(this.envelope1),this.oscillators.push(this.osc1),this.freqModGain1=AudioContext.createGain(),this.freqModGain1.gain.value=5,this.freqModGain1.connect(this.osc1.frequency),this.freqMod1=AudioContext.createOscillator(),this.freqMod1.type=this.getRandomOscType(),this.freqMod1.frequency.value=20,this.freqMod1.connect(this.freqModGain1),this.freqMod1.start(0),this.freqModGain2=AudioContext.createGain(),this.freqModGain2.gain.value=7,this.freqModGain2.connect(this.osc1.frequency),this.freqMod2=AudioContext.createOscillator(),this.freqMod2.type=this.getRandomOscType(),this.freqMod2.frequency.value=6.234,this.freqMod2.connect(this.freqModGain2),this.freqMod2.start(0),this.osc1.start(0)}return extend(t,e),t}(Voice),module.exports=MonoistEnvMod;

},{"../AudioContext.coffee":1,"../module/ASDR.coffee":11,"../module/Harmonizer.coffee":12,"./Voice.coffee":20}],17:[function(require,module,exports){
var ASDR,AudioContext,Harmonizer,MonoistEnvModWide,Voice,extend=function(t,e){function o(){this.constructor=t}for(var s in e)hasProp.call(e,s)&&(t[s]=e[s]);return o.prototype=e.prototype,t.prototype=new o,t.__super__=e.prototype,t},hasProp={}.hasOwnProperty;AudioContext=require("../AudioContext.coffee"),Voice=require("./Voice.coffee"),ASDR=require("../module/ASDR.coffee"),Harmonizer=require("../module/Harmonizer.coffee"),MonoistEnvModWide=function(t){function e(t,o){this.unison=null!=o?o:!0,e.__super__.constructor.call(this,t),this.extraNotes=[19,27,13],this.extraNotes.shuffle(),this.asdr=new ASDR(.03,.1,100,.1),this.envelope=AudioContext.createGain(),this.envelope.gain.value=0,this.envelope.connect(this.pan),this.envelopes.push(this.envelope),this.pan1=AudioContext.createPanner(),this.pan1.setPosition(-1,0,0),this.pan1.connect(this.envelope),this.pan2=AudioContext.createPanner(),this.pan2.setPosition(1,0,0),this.pan2.connect(this.envelope),this.pan3=AudioContext.createPanner(),this.pan3.setPosition(0,0,0),this.pan3.connect(this.envelope),this.osc1=AudioContext.createOscillator(),this.osc1.type=this.getRandomOscType(),this.osc1.frequency.value=Harmonizer.getFreqFromNote(this.note+(this.unison?0:this.extraNotes[0])),this.osc1.connect(this.pan1),this.osc2=AudioContext.createOscillator(),this.osc2.type=this.getRandomOscType(),this.osc2.frequency.value=Harmonizer.getFreqFromNote(this.note+(this.unison?0:this.extraNotes[1])),this.osc2.connect(this.pan2),this.osc3=AudioContext.createOscillator(),this.osc3.type=this.getRandomOscType(),this.osc3.frequency.value=Harmonizer.getFreqFromNote(this.note+(this.unison?0:this.extraNotes[2])),this.osc3.connect(this.pan2),this.oscillators.push(this.osc1),this.oscillators.push(this.osc2),this.oscillators.push(this.osc3),this.freqModGain1=AudioContext.createGain(),this.freqModGain1.gain.value=5,this.freqModGain1.connect(this.osc1.frequency),this.freqMod1=AudioContext.createOscillator(),this.freqMod1.type=this.getRandomOscType(),this.freqMod1.frequency.value=8,this.freqMod1.connect(this.freqModGain1),this.freqMod1.start(0),this.freqModGain2=AudioContext.createGain(),this.freqModGain2.gain.value=5,this.freqModGain2.connect(this.osc2.frequency),this.freqMod2=AudioContext.createOscillator(),this.freqMod2.type=this.getRandomOscType(),this.freqMod2.frequency.value=13.123,this.freqMod2.connect(this.freqModGain2),this.freqMod2.start(0),this.freqModGain3=AudioContext.createGain(),this.freqModGain3.gain.value=15,this.freqModGain3.connect(this.osc3.frequency),this.freqMod3=AudioContext.createOscillator(),this.freqMod3.type=this.getRandomOscType(),this.freqMod3.frequency.value=.123,this.freqMod3.connect(this.freqModGain3),this.freqMod3.start(0),this.osc1.start(0),this.osc2.start(0),this.osc3.start(0)}return extend(e,t),e.prototype.setUnison=function(t){var e,o,s,i,n;for(this.unison=t,n=[],o=s=0,i=this.oscillators.length-1;i>=0?i>=s:s>=i;o=i>=0?++s:--s)e=this.unison?0:this.extraNotes[o],n.push(this.oscillators[o].frequency.value=Harmonizer.getFreqFromNote(this.note+e));return n},e}(Voice),module.exports=MonoistEnvModWide;

},{"../AudioContext.coffee":1,"../module/ASDR.coffee":11,"../module/Harmonizer.coffee":12,"./Voice.coffee":20}],18:[function(require,module,exports){
var ASDR,AudioContext,Harmonizer,MonoistEnvMulti,Voice;AudioContext=require("../AudioContext.coffee"),Voice=require("./Voice.coffee"),ASDR=require("../module/ASDR.coffee"),Harmonizer=require("../module/Harmonizer.coffee"),MonoistEnvMulti=function(){function e(){this.note=randomInt(40,80),this.noteIsOn=!1,this.volNode=AudioContext.createGain(),this.volNode.gain.value=.25,this.volNode.connect(AudioContext.destination),this.compressor=AudioContext.createDynamicsCompressor(),this.compressor.connect(this.volNode),this.panner1=AudioContext.createPanner(),this.panner1.setPosition(-1,0,0),this.panner1.connect(this.compressor),this.panner2=AudioContext.createPanner(),this.panner2.setPosition(1,0,0),this.panner2.connect(this.compressor),this.panner3=AudioContext.createPanner(),this.panner3.setPosition(0,0,0),this.panner3.connect(this.compressor),this.asdr=new ASDR(.1,.1,100,.1),this.envelope1=AudioContext.createGain(),this.envelope1.gain.setValueAtTime(0,0),this.envelope1.connect(this.panner1),this.envelope2=AudioContext.createGain(),this.envelope2.gain.setValueAtTime(0,0),this.envelope2.connect(this.panner2),this.envelope3=AudioContext.createGain(),this.envelope3.gain.setValueAtTime(0,0),this.envelope3.connect(this.panner3),this.osc1=AudioContext.createOscillator(),this.osc1.type="sine",this.osc1.frequency.value=Harmonizer.getFreqFromNote(this.note),this.osc1.connect(this.envelope1),this.osc1.start(0),this.osc2=AudioContext.createOscillator(),this.osc2.type="triangle",this.osc2.frequency.value=Harmonizer.getFreqFromNote(1*this.note),this.osc2.connect(this.envelope2),this.osc2.start(0)}return e.prototype.noteOn=function(e){var t,n;return n=AudioContext.currentTime,t=n+this.asdr.attack,this.envelope1.gain.cancelScheduledValues(n),this.envelope1.gain.setValueAtTime(this.envelope1.gain.value,n),this.envelope1.gain.linearRampToValueAtTime(1,t),this.envelope2.gain.cancelScheduledValues(n),this.envelope2.gain.setValueAtTime(this.envelope1.gain.value,n),this.envelope2.gain.linearRampToValueAtTime(1,t),this.envelope3.gain.cancelScheduledValues(n),this.envelope3.gain.setValueAtTime(this.envelope1.gain.value,n),this.envelope3.gain.linearRampToValueAtTime(1,t),this.envelope1.gain.setTargetAtTime(this.asdr.sustain/100,t,this.asdr.decay/100+.001),this.envelope2.gain.setTargetAtTime(this.asdr.sustain/100,t,this.asdr.decay/100+.001),this.envelope3.gain.setTargetAtTime(this.asdr.sustain/100,t,this.asdr.decay/100+.001),this.noteIsOn=!0},e.prototype.noteOff=function(){var e,t;return e=AudioContext.currentTime,t=e+this.asdr.release,console.log(e),this.envelope1.gain.cancelScheduledValues(e),this.envelope1.gain.setValueAtTime(this.envelope1.gain.value,e),this.envelope1.gain.linearRampToValueAtTime(0,t),this.envelope2.gain.cancelScheduledValues(e),this.envelope2.gain.setValueAtTime(this.envelope2.gain.value,e),this.envelope2.gain.linearRampToValueAtTime(0,t),this.envelope3.gain.cancelScheduledValues(e),this.envelope3.gain.setValueAtTime(this.envelope3.gain.value,e),this.envelope3.gain.linearRampToValueAtTime(0,t),this.noteIsOn=!1},e}(),module.exports=MonoistEnvMulti;

},{"../AudioContext.coffee":1,"../module/ASDR.coffee":11,"../module/Harmonizer.coffee":12,"./Voice.coffee":20}],19:[function(require,module,exports){
var ASDR,AudioContext,Harmonizer,MonoistPerc,Voice,extend=function(e,t){function o(){this.constructor=e}for(var i in t)hasProp.call(t,i)&&(e[i]=t[i]);return o.prototype=t.prototype,e.prototype=new o,e.__super__=t.prototype,e},hasProp={}.hasOwnProperty;AudioContext=require("../AudioContext.coffee"),Voice=require("./Voice.coffee"),ASDR=require("../module/ASDR.coffee"),Harmonizer=require("../module/Harmonizer.coffee"),MonoistPerc=function(e){function t(e){t.__super__.constructor.call(this,e),this.delay=AudioContext.createDelay(),this.delay.delayTime=4,this.delay.connect(this.pan),this.lpf=AudioContext.createBiquadFilter(),this.lpf.type="lowpass",this.lpf.frequency.value=2e4,this.hpf=AudioContext.createBiquadFilter(),this.hpf.type="highpass",this.hpf.frequency.value=0,this.hpf.connect(this.lpf),this.lpf.connect(this.delay),this.asdr=new ASDR(.01,0,1,.2),this.envelope=AudioContext.createGain(),this.envelope.gain.setValueAtTime(0,0),this.envelope.connect(this.hpf),this.envelopes.push(this.envelope),this.osc=AudioContext.createOscillator(),this.osc.frequency.value=Harmonizer.getFreqFromNote(this.note),this.osc.connect(this.envelope),this.osc.start(0),this.oscillators.push(this.osc),this.mod=AudioContext.createOscillator(),this.mod.type=this.getRandomOscType(),this.mod.frequency=randomInt(10,20),this.mod.start(0),this.modGain=AudioContext.createGain(),this.modGain.gain.value=20,this.mod.connect(this.modGain),this.modGain.connect(this.osc.frequency),this.mod2=AudioContext.createOscillator(),this.mod2.type="sawtooth",this.mod2.frequency=randomInt(500,1e3),this.mod2.start(0),this.modGain2=AudioContext.createGain(),this.modGain2.gain.value=100,this.mod2.connect(this.modGain2),this.modGain2.connect(this.osc.frequency)}return extend(t,e),t.prototype.noteOn=function(){var e,t,o,i;return o=AudioContext.currentTime+this.waitTime,e=o+this.asdr.attack,t=e+this.asdr.decay,i=e+this.asdr.release,this.envelope.gain.cancelScheduledValues(o),this.envelope.gain.setValueAtTime(0,o),this.envelope.gain.linearRampToValueAtTime(1,e),this.envelope.gain.linearRampToValueAtTime(0,i)},t}(Voice),module.exports=MonoistPerc;

},{"../AudioContext.coffee":1,"../module/ASDR.coffee":11,"../module/Harmonizer.coffee":12,"./Voice.coffee":20}],20:[function(require,module,exports){
var AudioContext,Voice,randomInt;AudioContext=require("../AudioContext.coffee"),randomInt=require("../../util/utilities.coffee").randomInt,Voice=function(){function t(t,e,i){this.note=t,this.fxIn=e,this.masterWet=i,this.oscillators=[],this.envelopes=[],this.waitTime=0,this.pan=AudioContext.createPanner(),this.masterVol=AudioContext.createGain(),this.masterVol.gain.value=5e-4,this.pan.connect(this.masterVol)}return t.prototype.noteOn=function(t){var e,i,a,n,s,o,r,u,l,h,c;for(n=t>this.asdr.attack+this.asdr.decay?t-this.asdr.attack-this.asdr.decay:0,r=AudioContext.currentTime+this.waitTime,e=r+this.asdr.attack,i=e+this.asdr.decay,h=t>=0?i+n:0,l=h+this.asdr.release,c=[],s=o=0,u=this.envelopes.length-1;u>=0?u>=o:o>=u;s=u>=0?++o:--o)a=this.envelopes[s],a.gain.cancelScheduledValues(r),a.gain.setValueAtTime(a.gain.value,r),a.gain.linearRampToValueAtTime(1,e),a.gain.linearRampToValueAtTime(this.asdr.sustain,i),n>0&&a.gain.linearRampToValueAtTime(this.asdr.sustain,h),t>=0?c.push(a.gain.linearRampToValueAtTime(0,l)):c.push(void 0);return c},t.prototype.noteOff=function(){var t,e,i,a,n,s,o,r,u;for(s=AudioContext.currentTime,r=s+this.asdr.release,u=[],a=n=0,o=this.envelopes.length-1;o>=0?o>=n:n>=o;a=o>=0?++n:--n){e=this.envelopes[a],e.gain.cancelScheduledValues(s),e.gain.setValueAtTime(e.gain.value,s),e.gain.linearRampToValueAtTime(0,r);try{u.push(this.oscillators[a].stop(r+.01))}catch(i){t=i}}return u},t.prototype.stop=function(t){var e,i,a,n,s;for(null==t&&(t=0),n=this.oscillators,s=[],e=0,i=n.length;i>e;e++)a=n[e],s.push(a.stop(t));return s},t.prototype.setPan=function(t){return this.pan.setPosition(t,0,0)},t.prototype.getRandomOscType=function(){var t;return t=["sine","sawtooth","square","triangle"],t[randomInt(0,3)]},t}(),module.exports=Voice;

},{"../../util/utilities.coffee":38,"../AudioContext.coffee":1}],21:[function(require,module,exports){
var Constants,DisharmonyCalculator,EventDispatcher,Factor;Constants=require("../environment/Constants.coffee"),EventDispatcher=require("../event/EventDispatcher.coffee"),Factor=require("../factor/Factor.coffee"),DisharmonyCalculator=function(){function t(t,o){this._organism=t,this.debug=null!=o?o:!1}return t.NODE_COMPARISON_MODE_UNKNOWN=0,t.NODE_COMPARISON_MODE_FACTOR_HARMONY=1,t.NODE_COMPARISON_MODE_ORGANISM_HARMONY=2,t.NODE_ACTION_MOVE_VALUE_NONE=3,t.NODE_ACTION_MOVE_VALUE_1=4,t.NODE_ACTION_MOVE_VALUE_2=5,t.NODE_ACTION_SAVE_VALUE_1=6,t.NODE_ACTION_SAVE_VALUE_2=7,t.NODE_ACTION_SAVE_BOTH=8,t.prototype.getSummedOrganismDisharmony=function(){var t,o,e,r,a,n;for(n=0,a=this._organism.getFactors(),e=0,r=a.length;r>e;e++)o=a[e],n+=this.getFactorDisharmonyForNodes(o,this._organism.getNodes());return t=n/this._organism.getNodes().length,n},t.prototype.getActualOrganismDisharmony=function(){var t,o,e,r,a,n,l,s,c,i,_,O,u,h,N;for(a=[],u=this._organism.getFactors(),c=0,O=u.length;O>c;c++)l=u[c],a[l.factorType]=this.getFactorDisharmonyForNodes(l,this._organism.getNodes());for(r=Factor.FACTOR_CORRELATIONS,s=i=1,h=Constants.NUM_FACTORS;h>=1?h>=i:i>=h;s=h>=1?++i:--i)for(o=_=1,N=Constants.NUM_FACTORS;N>=1?N>=_:_>=N;o=N>=1?++_:--_)null!=r[s]&&null!=r[s][o]&&(e=r[s][o],n=Math.abs(a[s]-a[o]),a[s]+=Math.pow(n,2.2)*(100-e)/(100*n));return t=a.reduce(function(t,o){return t+o})},t.prototype.getFactorDisharmonyForNodes=function(t,o){var e,r,a,n;for(e=0,r=0,a=o.length;a>r;r++)n=o[r],n.hasCellOfFactorType(t.factorType)&&(e+=this.getFactorDisharmonyForNode(t,n));return e},t.prototype.getFactorDisharmonyForNode=function(t,o){var e,r,a;return r=0,(e=o.getCell(t.factorType))?r=0<=(a=e.factorValue)&&a<=t.factorValue?this._calcFactorDisharmonyForNode_lteF(e.factorValue,t.factorValue):this._calcFactorDisharmonyForNode_gtF(e.factorValue,t.factorValue):void 0},t.prototype.getRelativeDisharmonyForFactors=function(t){},t.prototype.alterNodesInComparisonMode=function(o,e){var r,a,n,l,s,c,i,_,O,u,h,N,f,d,C,p,g,E,A,D,F,V,m,y,M;for(s=e===t.NODE_COMPARISON_MODE_FACTOR_HARMONY?"getFactorDisharmonyForNodes":"getActualOrganismDisharmony",l=[],V=o[0].getCells(),O=0,f=V.length;f>O;O++)for(r=V[O],m=o[1].getCells(),u=0,d=m.length;d>u;u++)a=m[u],r.factorType===a.factorType&&l.push(r.factorType);for(h=0,C=l.length;C>h;h++){for(_=l[h],M=o,g=!1,N=0,p=o.length;p>N;N++)if(D=o[N],n=D.getCell(_),0===n.factorValue&&(D.addCellValue(_,1),g=!0),100===n.factorValue&&(D.addCellValue(_,-1),g=!0),g)return;i=this._organism.getFactorOfType(_),c=this[s](i,M),M[0].addCellValue(_,-1),M[1].addCellValue(_,1),E=this[s](i,M),M[0].addCellValue(_,2),M[1].addCellValue(_,-2),A=this[s](i,M),M[0].addCellValue(_,-1),M[1].addCellValue(_,1),y=A>E?E:A,F=A>E?t.NODE_ACTION_MOVE_VALUE_1:t.NODE_ACTION_MOVE_VALUE_2,this._performAction(o,_,F)}return!0},t.prototype._performAction=function(o,e,r){switch(r){case t.NODE_ACTION_MOVE_VALUE_1:o[0].addCellValue(e,-1),o[1].addCellValue(e,1);break;case t.NODE_ACTION_MOVE_VALUE_2:o[0].addCellValue(e,1),o[1].addCellValue(e,-1)}return EventDispatcher.trigger("audanism/alter/nodes",[{nodes:o,factorType:e,action:r}])},t.prototype._calcFactorDisharmonyForNode_lteF=function(t,o){var e;return e=-Math.pow(t,2)/Math.pow(o,2)+1,e=Math.pow(e,6),e=Math.pow(e+1,10)},t.prototype._calcFactorDisharmonyForNode_gtF=function(t,o){var e;return e=-((t-o)*(t-200+o))/Math.pow(100-o,2),e=Math.pow(e,6),e=Math.pow(e+1,10)},t}(),module.exports=DisharmonyCalculator;

},{"../environment/Constants.coffee":23,"../event/EventDispatcher.coffee":26,"../factor/Factor.coffee":29}],22:[function(require,module,exports){
var Environment;Environment=require("./Environment.coffee"),window.Audanism={Audio:{FX:{},Instrument:{},Module:{},Synthesizer:{}},Calculator:{},Environment:{},Event:{},Factor:{},Graphic:{},GUI:{},Node:{},SourceAdapter:{},Util:{}},$(window).ready(function(n){return function(){return window.Audanism.appInstance=new Environment}}(this));

},{"./Environment.coffee":24}],23:[function(require,module,exports){
module.exports={NUM_FACTORS:5,DEFAULT_NUM_NODES:10,DISTRIBUTE_FACTOR_VALUES:!1};

},{}],24:[function(require,module,exports){
var Conductor,Constants,Environment,EventDispatcher,GUI,InstagramSourceAdapter,Organism,VisualOrganism,WheatherSourceAdapter,getRandomElements,randomInt;Constants=require("./Constants.coffee"),Organism=require("./Organism.coffee"),VisualOrganism=require("../graphic/VisualOrganism.coffee"),Conductor=require("../audio/Conductor.coffee"),GUI=require("../gui/GUI.coffee"),InstagramSourceAdapter=require("../sourceadapter/InstagramSourceAdapter.coffee"),WheatherSourceAdapter=require("../sourceadapter/WheatherSourceAdapter.coffee"),EventDispatcher=require("../event/EventDispatcher.coffee"),randomInt=require("../util/utilities.coffee").randomInt,getRandomElements=require("../extend/Array.coffee").getRandomElements,Environment=function(){function t(){var e;this._iterationCount=0,this._isRunning=!1,this._isSingleStep=!1,this.visualOrganism=new VisualOrganism,this._organisms=function(){var n,r,i;for(i=[],e=n=1,r=t.NUM_ORGANISMS;r>=1?r>=n:n>=r;e=r>=1?++n:--n)i.push(new Organism);return i}(),EventDispatcher.trigger("audanism/init/organism",[this._organisms[0]]),this._gui=new GUI,this.listenToControls(),this.createInfluenceSources(),EventDispatcher.listen("audanism/influence",this,this.influence),this.initConductor(),this.run(),EventDispatcher.listen("audanism/controls/start",this,this.start),EventDispatcher.listen("audanism/controls/pause",this,this.pause),EventDispatcher.listen("audanism/controls/stop",this,this.stop),EventDispatcher.listen("audanism/controls/step",this,this.step)}return t.NUM_ORGANISMS=1,t.TIME_INTERVAL=500,t.prototype.run=function(){return this._intervalId=setInterval(function(t){return function(){return t.handleIteration()}}(this),t.TIME_INTERVAL)},t.prototype.start=function(){var t,e,n,r,i;for(this._isRunning=!0,n=this._influenceSources,r=[],t=0,e=n.length;e>t;t++)i=n[t],r.push(i.activate());return r},t.prototype.pause=function(){var t,e,n,r,i;for(this._isRunning=!1,n=this._influenceSources,r=[],t=0,e=n.length;e>t;t++)i=n[t],r.push(i.deactivate());return r},t.prototype.stop=function(){return this._isRunning=!1,clearInterval(this._intervalId)},t.prototype.step=function(){return this._isSingleStep=!0},t.prototype.listenToControls=function(){return $(document).on("dmstart",function(t){return function(t){return EventDispatcher.trigger("audanism/controls/start")}}(this)),$(document).on("dmpause",function(t){return function(t){return EventDispatcher.trigger("audanism/controls/pause")}}(this)),$(document).on("dmstop",function(t){return function(t){return EventDispatcher.trigger("audanism/controls/stop")}}(this)),$(document).on("dmstep",function(t){return function(t){return EventDispatcher.trigger("audanism/controls/step")}}(this))},t.prototype.handleIteration=function(){var t,e,n,r,i;if(this._iterationCount++,this._isRunning||this._isSingleStep){for(r=this._organisms,i=[],t=0,e=r.length;e>t;t++)n=r[t],n.performNodeComparison(),this._iterationCount%10===0&&EventDispatcher.trigger("audanism/node/add",{numNodes:1}),EventDispatcher.trigger("audanism/iteration",[{count:this._iterationCount,organism:n}]),i.push(this._isSingleStep=!1);return i}},t.prototype.createInfluenceSources=function(){return this._influenceSources=[],this._influenceSources.push(new InstagramSourceAdapter(6e3,"art")),this._influenceSources.push(new InstagramSourceAdapter(3e3,"audanism")),this._influenceSources.push(new WheatherSourceAdapter(4e3))},t.prototype.influence=function(t){var e,n,r,i,a,o,s,u,c,d,f,h,g,p,m,l,v,_,E,S,I,R,y,C,D,M,O,A,T;if(this._isRunning){if(null!=t.node)for(I=this._organisms,u=0,f=I.length;f>u;u++)S=I[u],i="rand"===t.node.factor?getRandomElements(S.getFactors()):S.getFactorOfType(t.node.factor),l="rand"===t.node.node?S._getRandomNodesOfFactorType(i.factorType,1)[0]:S.getNode(t.node.node),s={node:{node:l,factor:i,value:t.node.valueModifier},meta:t.meta},EventDispatcher.trigger("audanism/influence/node",[s]),l.addCellValue(i.factorType,t.node.valueModifier),EventDispatcher.trigger("audanism/influence/node/after",[s]);if(null!=t.factor)for(R=this._organisms,c=0,h=R.length;h>c;c++)S=R[c],"rand"===t.factor.factor&&(a=randomInt(1,Constants.NUM_FACTORS),i=S.getFactorOfType(a)),i&&(s={factor:{factor:i,value:t.factor.valueModifier},meta:t.meta},EventDispatcher.trigger("audanism/influence/factor",s),i.addValue(t.factor.valueModifier),EventDispatcher.trigger("audanism/influence/factor/after",s));if(null!=t.random){if(O=t.random.object,e=t.random.num,n=t.random.valueModifier,_=0,T=-1,E=typeof e,"integer"===E?_=e:"array"===E?_=Math.randomRange(e[1],e[0]):"string"===E&&"rand"===e&&(_=Math.randomRange("factor"===O?1:5)),"factor"===O){for(y=this._organisms,D=[],d=0,g=y.length;g>d;d++)S=y[d],o=getRandomElements(S.getFactors(),_),D.push(function(){var t,e,r;for(r=[],e=0,t=o.length;t>e;e++)i=o[e],A=typeof n,"integer"===A?T=n:"array"===A?T=Math.randomRange(n[1],n[0]):"string"===A&&"rand"===n&&(T=Math.randomRange(5,-5)),r.push(S.getFactorOfType(i.factorType).addValue(T));return r}());return D}if("node"===O){for(C=this._organisms,M=[],m=0,p=C.length;p>m;m++)S=C[m],v=getRandomElements(S.getNodes(),_),M.push(function(){var t,e,i;for(i=[],e=0,t=v.length;t>e;e++)l=v[e],A=typeof n,"integer"===A?T=n:"array"===A?T=Math.randomRange(n[1],n[0]):"string"===A&&"rand"===n&&(T=Math.randomRange(50,-50)),r=getRandomElements(l.getCells(),1)[0],i.push(r.addFactorValue(T));return i}());return M}}}},t.prototype.initConductor=function(){return this.conductor=new Conductor,this.conductor.setOrganism(this._organisms[0])},t}(),module.exports=Environment;

},{"../audio/Conductor.coffee":2,"../event/EventDispatcher.coffee":26,"../extend/Array.coffee":27,"../graphic/VisualOrganism.coffee":30,"../gui/GUI.coffee":31,"../sourceadapter/InstagramSourceAdapter.coffee":34,"../sourceadapter/WheatherSourceAdapter.coffee":36,"../util/utilities.coffee":38,"./Constants.coffee":23,"./Organism.coffee":25}],25:[function(require,module,exports){
var Constants,DisharmonyCalculator,EventDispatcher,Factor,Node,Organism,getRandomElements;require("../extend/Math.coffee"),Constants=require("./Constants.coffee"),Factor=require("../factor/Factor.coffee"),Node=require("../node/Node.coffee"),DisharmonyCalculator=require("../calculator/DisharmonyCalculator.coffee"),EventDispatcher=require("../event/EventDispatcher.coffee"),getRandomElements=require("../extend/Array.coffee").getRandomElements,Organism=function(){function t(t){var s;null==t&&(t=-1),this._sumDisharmony=0,this._actualDisharmony=0,this._inStressMode=!1,this.stress={thresholdEnter:0,thresholdLeave:0},EventDispatcher.trigger("audanism/organism/stressmode",this._inStressMode),this._stressAdjustmentTime=8e3,this._stressAdjustmentInterval=setInterval(this.adjustStressThresholds.bind(this),this._stressAdjustmentTime),this._factors=function(){var t,e,r;for(r=[],s=t=1,e=Constants.NUM_FACTORS;e>=1?e>=t:t>=e;s=e>=1?++t:--t)r.push(Factor.createFactor(s,0));return r}(),EventDispatcher.trigger("audanism/init/factors",[this._factors]),0>=t&&(t=Constants.DEFAULT_NUM_NODES),this._createNodes(t),EventDispatcher.trigger("audanism/init/nodes",[this._nodes]),EventDispatcher.listen("audanism/node/add",this,function(t){return function(s){return t._createNodes(s.numNodes)}}(this)),this.disharmonyCalculator=new DisharmonyCalculator(this),this.disharmonyHistory=[]}return t.prototype.getNode=function(t){return null!=this._nodes[t]?this._nodes[t]:null},t.prototype.getNodesWithCellsOfFactorType=function(t){return this._nodeCellIndex[t]},t.prototype.getNodes=function(){return this._nodes},t.prototype.getFactors=function(){return this._factors},t.prototype.getFactorOfType=function(t){var s,e,r,n,o;for(e=null,o=this._factors,r=0,n=o.length;n>r;r++)s=o[r],s.factorType===t&&(e=s);return e},t.prototype.performNodeComparison=function(t){var s,e,r,n,o,i,a,h,l;for(null==t&&(t=1),this.isInitialComparison=0===this._sumDisharmony,this.disharmonyCalculator.debug=!0,r=n=1,h=t;h>=1?h>=n:n>=h;r=h>=1?++n:--n)a=this._getRandomNodes(2),this._inStressMode,s=DisharmonyCalculator.NODE_COMPARISON_MODE_ORGANISM_HARMONY,EventDispatcher.trigger("audanism/compare/nodes",[{nodes:a,comparisonMode:s}]),this.disharmonyCalculator.alterNodesInComparisonMode(a,s);for(this.disharmonyCalculator.debug=!1,this._sumDisharmony=this.disharmonyCalculator.getSummedOrganismDisharmony(this),this._actualDisharmony=this.disharmonyCalculator.getActualOrganismDisharmony(this),this.disharmonyHistory.push([this.disharmonyHistory.length,this._sumDisharmony,this._actualDisharmony]),l=this._factors,o=0,i=l.length;i>o;o++)e=l[o],e.setDisharmony(this.disharmonyCalculator.getFactorDisharmonyForNodes(e,this._nodes));return this.isInitialComparison&&(this.stress.thresholdEnter=1.2*this._actualDisharmony),!this._inStressMode&&this._actualDisharmony>this.stress.thresholdEnter?(this._inStressMode=!0,this.stress.thresholdLeave=1*this.stress.thresholdEnter,EventDispatcher.trigger("audanism/organism/stressmode",this._inStressMode),clearInterval(this._stressAdjustmentInterval),this._stressAdjustmentInterval=setInterval(this.adjustStressThresholds.bind(this),this._stressAdjustmentTime)):this._inStressMode&&this._actualDisharmony<this.stress.thresholdLeave?(this._inStressMode=!1,this.stress.thresholdEnter=1.2*this.stress.thresholdLeave,EventDispatcher.trigger("audanism/organism/stressmode",this._inStressMode),clearInterval(this._stressAdjustmentInterval),this._stressAdjustmentInterval=setInterval(this.adjustStressThresholds.bind(this),this._stressAdjustmentTime)):void 0},t.prototype.getDisharmonyHistoryData=function(t){return null==t&&(t=300),t>0?this.disharmonyHistory.slice(-t):this.disharmonyHistory.slice(-this.disharmonyHistory.length)},t.prototype.getAverageDisharmony=function(t,s){var e,r,n,o,i;for(null==s&&(s="sum"),r=this.getDisharmonyHistoryData(t),i=0,n=0,o=r.length;o>n;n++)e=r[n],i+="actual"===s?e[2]:e[1];return i/r.length},t.prototype.getDisharmonyChange=function(t,s){var e,r;return null==t&&(t=2),null==s&&(s="sum"),r=this.getDisharmonyHistoryData(t),e="actual"===s?2:1,r[r.length-1][e]/r[0][e]},t.prototype.getDisharmonyChangeForFactor=function(t,s){var e,r;return null==s&&(s=2),e=this.getFactorOfType(t),r=e.disharmonyHistory.slice(s<e.disharmonyHistory.length?-s:0),r[r.length-1]/r[0]},t.prototype.adjustStressThresholds=function(){return this._inStressMode?this.stress.thresholdLeave=1*this._actualDisharmony:this.stress.thresholdEnter=1.2*this._actualDisharmony},t.prototype._createNodes=function(t){var s,e,r,n,o,i,a,h,l,d,u,c,m,f,y,g,p,_,D,v,C,E,N;if(!this._nodeCellIndex)for(this._nodeCellIndex=[],D=this._factors,n=0,a=D.length;a>n;n++)e=D[n],this._nodeCellIndex[e.factorType]=[];for(this._nodes||(this._nodes=[]),g=function(){var s,e,n;for(n=[],r=s=1,e=t;e>=1?e>=s:s>=e;r=e>=1?++s:--s)n.push(new Node);return n}(),o=0,h=g.length;h>o;o++)y=g[o],this._nodes[y.nodeId]=y;for(i=0,l=g.length;l>i;i++)for(y=g[i],v=y.getCells(),m=0,d=v.length;d>m;m++)s=v[m],this._nodeCellIndex[s.factorType].push(y);if(Constants.DISTRIBUTE_FACTOR_VALUES){for(C=this._factors,E=[],f=0,u=C.length;u>f;f++)e=C[f],p=this.getNodesWithCellsOfFactorType(e.factorType),E.push(function(){var t,s,n;for(n=[],r=t=1,s=e.factorValue;s>=1?s>=t:t>=s;r=s>=1?++t:--t)n.push(getRandomElements(p,1)[0].addCellValue(e.factorType,1));return n}());return E}for(N=[],_=0,c=g.length;c>_;_++)y=g[_],N.push(function(){var t,e,r,n;for(r=y.getCells(),n=[],e=0,t=r.length;t>e;e++)s=r[e],n.push(s.factorValue=Math.randomRange(0,100));return n}());return N},t.prototype._getRandomNodes=function(t){var s,e,r,n,o,i,a;for(s=function(){i=[];for(var t=0,s=this._nodes.length-1;s>=0?s>=t:t>=s;s>=0?t++:t--)i.push(t);return i}.apply(this),o=function(){var r,n,o;for(o=[],e=r=1,n=t;n>=1?n>=r:r>=n;e=n>=1?++r:--r)o.push(s.splice(Math.floor(Math.random()*s.length),1));return o}(),a=[],r=0,n=o.length;n>r;r++)e=o[r],a.push(this._nodes[e]);return a},t.prototype._getRandomNodesOfFactorType=function(t,s){return getRandomElements(this._nodeCellIndex[t],s)},t}(),module.exports=Organism;

},{"../calculator/DisharmonyCalculator.coffee":21,"../event/EventDispatcher.coffee":26,"../extend/Array.coffee":27,"../extend/Math.coffee":28,"../factor/Factor.coffee":29,"../node/Node.coffee":32,"./Constants.coffee":23}],26:[function(require,module,exports){
var EventDispatcher;EventDispatcher=function(){function n(){}return n.prototype.on=function(n,t,r){return r&&t.bind(r),$(document).on(n,function(n){return function(n){return t.apply(null,arguments.slice(1))}}(this))},n.prototype.listen=function(n,t,r){return $(document).on(n,function(n){return function(n){return r.call(t,arguments[1])}}(this))},n.prototype.trigger=function(n,t){return $(document).trigger(n,t)},n}(),module.exports=new EventDispatcher;

},{}],27:[function(require,module,exports){
var getRandomElements,pushMany;pushMany=function(n,t){var e,r,o,a;for(a=[],e=0,r=t.length;r>e;e++)o=t[e],a.push(n.push(o));return a},window.pushMany=pushMany,getRandomElements=function(n,t){var e,r,o,a;return e=function(){var t,e,r;for(r=[],t=0,e=n.length;e>t;t++)a=n[t],r.push(a);return r}(),r=function(){var n,r,a;for(a=[],o=n=1,r=t;r>=1?r>=n:n>=r;o=r>=1?++n:--n)a.push(e.splice(Math.floor(Math.random()*e.length),1)[0]);return a}()},window.getRandomElements=getRandomElements,Array.prototype.shuffle=function(){var n,t,e;for(n=this.length;n>0;)t=Math.floor(Math.random()*n),n--,e=this[n],this[n]=this[t],this[t]=e;return this},module.exports={pushMany:pushMany,getRandomElements:getRandomElements};

},{}],28:[function(require,module,exports){
window.Math.randomRange=function(l,n){return null==l&&(l=null),null==n&&(n=null),null==l&&null==n?Math.random():(null==n&&(n=0),n+Math.floor(Math.random()*(l-n+1)))};

},{}],29:[function(require,module,exports){
var AgreeablenessFactor,ConscientiousnessFactor,ExtraversionFactor,Factor,NeuroticismFactor,OpennessFactor,Utils,extend=function(t,r){function o(){this.constructor=t}for(var e in r)hasProp.call(r,e)&&(t[e]=r[e]);return o.prototype=r.prototype,t.prototype=new o,t.__super__=r.prototype,t},hasProp={}.hasOwnProperty;Utils=require("../util/utilities.coffee"),Factor=function(){function t(t,r){this.factorType=t,this.factorValue=r,this.factorValue||(this.factorValue=Utils.randomInt(10,90)),this.name=this.constructor.name.replace(/^(\w+)Factor$/,"$1"),this.disharmony=0,this.relativeDisharmony=[],this.disharmonyHistory=[]}return t.TYPE_UNKNOWN=0,t.TYPE_OPENNESS=1,t.TYPE_CONSCIENTIOUSNESS=2,t.TYPE_EXTRAVERSION=3,t.TYPE_AGREEABLENESS=4,t.TYPE_NEUROTICISM=5,t.FACTOR_CORRELATIONS={1:{2:-15,3:25},2:{3:30},3:{4:50},4:{5:-20}},t.createFactor=function(r,o){switch(null==o&&(o=0),r){case t.TYPE_OPENNESS:return new OpennessFactor;case t.TYPE_CONSCIENTIOUSNESS:return new ConscientiousnessFactor;case t.TYPE_EXTRAVERSION:return new ExtraversionFactor;case t.TYPE_AGREEABLENESS:return new AgreeablenessFactor;case t.TYPE_NEUROTICISM:return new NeuroticismFactor;default:return null}},t.prototype.addValue=function(t){return this.factorValue+=t,this.factorValue<0&&(this.factorValue=0),this.factorValue>100?this.factorValue=100:void 0},t.prototype.setDisharmony=function(t){return this.disharmony=t,this.disharmonyHistory.push(t)},t.prototype.toString=function(){return"<Factor #"+this.factorType+" ("+this.name+"); factorValue = "+this.factorValue+">"},t}(),module.exports=Factor,AgreeablenessFactor=function(t){function r(){r.__super__.constructor.call(this,Factor.TYPE_AGREEABLENESS)}return extend(r,t),r}(Factor),ConscientiousnessFactor=function(t){function r(){r.__super__.constructor.call(this,Factor.TYPE_CONSCIENTIOUSNESS)}return extend(r,t),r}(Factor),OpennessFactor=function(t){function r(){r.__super__.constructor.call(this,Factor.TYPE_OPENNESS)}return extend(r,t),r}(Factor),ExtraversionFactor=function(t){function r(){r.__super__.constructor.call(this,Factor.TYPE_EXTRAVERSION)}return extend(r,t),r}(Factor),NeuroticismFactor=function(t){function r(){r.__super__.constructor.call(this,Factor.TYPE_NEUROTICISM)}return extend(r,t),r}(Factor);

},{"../util/utilities.coffee":38}],30:[function(require,module,exports){
var EventDispatcher,VisualOrganism,randomInt;EventDispatcher=require("../event/EventDispatcher.coffee"),randomInt=require("../util/utilities.coffee").randomInt,VisualOrganism=function(){function t(){var t;t=this,this.opts={cameraDistanceStart:1600,cameraDistance:1300,clusterSize:1e3,roomSize:3e3,roomVertices:100,roomColor:new THREE.Color(4877706),roomColor2:new THREE.Color(4025725),roomColorChaos:new THREE.Color(9705808),fogColorStart:new THREE.Color(10066329),ballSize:10,ballColor:new THREE.Color(15920464),ballColorCompare:new THREE.Color(15878400),ballCompareTime:1e3,ballColorInfluence:new THREE.Color(15545504),ballInfluenceTime:2e3,ballColorVeteran:new THREE.Color(2045664),groupCubesEvery:6,cubesPerGroup:4},this.state={},this.queue=[],this.tweens=[],this.cubes=[],this.newCubes=[],this.cubeLines=[],this.megaCubes=[],this.cubesGrouped=0,this.newBalls=[],$(window).on("resize",this.onWindowResize.bind(this)),EventDispatcher.listen("audanism/controls/start",this,this.onStart),EventDispatcher.listen("audanism/init/organism",this,this.onInitOrganism),EventDispatcher.listen("audanism/iteration",this,this.onIteration),EventDispatcher.listen("audanism/compare/nodes",this,this.onCompareNodes),EventDispatcher.listen("audanism/influence/node",this,this.onInfluenceNode),EventDispatcher.listen("audanism/influence/factor/after",this,this.onInfluenceFactorAfter),EventDispatcher.listen("audanism/node/add",this,function(t){return function(e){return t.createBalls(e.numNodes)}}(this))}return t.prototype.onStart=function(){return 0===this.balls.length?this.createBalls(this.numBalls):void 0},t.prototype.onInitOrganism=function(t){return this.organism=t,this.init()},t.prototype.onWindowResize=function(t){return this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(window.innerWidth,window.innerHeight)},t.prototype.init=function(){return window.Audanism.Graphic["public"]={animate:this.animate.bind(this)},this.buildScene(),this.animate()},t.prototype.buildScene=function(){var t,e,n,i,a,s,o,r,l,h;for(r=new Date,this.lastLoop=0,this.thisLoop=0,this.fps=0,this.numBadFps=0,this.camera,this.scene,this.renderer,this.stats,this.lightAmb,this.lightSpot,this.factors=[],this.balls=[],this.balls3d=[],this.numBalls=this.organism.getNodes().length,this.sphereSize=500,this.frame=0,this.mouseX=0,this.mouseY=0,this.mouseStartX=0,this.mouseStartY=0,this.mouseDX=0,this.mouseDY=0,this.mouseDown=!1,this.keyLeft=!1,this.keyRight=!1,this.keyUp=!1,this.keyDown=!1,this.renderer=new THREE.WebGLRenderer({alpha:!1,antialias:!1}),this.renderer.setSize(window.innerWidth,window.innerHeight),this.renderer.clearColor=16716176,this.scene=new THREE.Scene,this.camera=new THREE.PerspectiveCamera(50,window.innerWidth/window.innerHeight,1,2e4),this.camera.position=new THREE.Vector3(1,.25,1).multiplyScalar(this.opts.cameraDistanceStart),this.camera.target=new THREE.Vector3(0,0,0),this.camera.lookAt(this.camera.target),this.camera.setLens(35),this.stats=new Stats,$(this.stats.domElement).attr("id","fps-stats"),container.appendChild(this.stats.domElement),this.lightAmb=new THREE.AmbientLight(11184810),this.scene.add(this.lightAmb),this.lightSpot=new THREE.DirectionalLight(11184810,.7),this.lightSpot.position.set(0,1,1),this.scene.add(this.lightSpot),this.lightSpot2=new THREE.DirectionalLight(11184810,.5),this.lightSpot2.position.set(.3,1,-1),this.scene.add(this.lightSpot2),h=this.opts.roomColor.clone(),this.room=new THREE.Mesh(new THREE.SphereGeometry(this.opts.roomSize,this.opts.roomVertices,this.opts.roomVertices/2),new THREE.MeshPhongMaterial({ambient:h,side:THREE.BackSide,shading:THREE.FlatShading,blending:THREE.AdditiveBlending,vertexColors:THREE.VertexColors})),this.setDaylight(),this.scene.add(this.room),setInterval(function(t){return function(){return t.state.shouldSetDaylight=!0}}(this),6e4),this.centerBall=new THREE.Mesh(new THREE.TetrahedronGeometry(10,0),new THREE.MeshLambertMaterial({ambient:3346807,side:THREE.DoubleSide})),t=new THREE.SpriteMaterial({map:new THREE.ImageUtils.loadTexture("img/glow.png"),useScreenCoordinates:!1,color:2236962,transparent:!1,blending:THREE.AdditiveBlending}),e=new THREE.Sprite(t),e.scale.set(50,50,1),this.centerBall.add(e),this.scene.add(this.centerBall),l=this.organism.getFactors(),s=0,o=l.length;o>s;s++)n=l[s],a=new THREE.Color,a.setHSL(n.factorType/this.organism.getFactors().length,.6,.7),i=new THREE.Mesh(new THREE.CylinderGeometry(50,0,3*n.factorValue),new THREE.MeshLambertMaterial({ambient:a,side:THREE.FrontSide})),i.position.set(1===randomInt(0,1)?randomInt(-800,-600):randomInt(600,800),0,1===randomInt(0,1)?randomInt(-800,-600):randomInt(600,800)),i.userData={isModifying:!1,startPosition:i.position.clone(),hover:!0,hoverStartFrame:0,initialValue:n.factorValue,baseColor:i.material.ambient.clone()},i.dynamic=!0,this.factors[n.factorType]=i,this.scene.add(i);return this.orbitControls=new THREE.OrbitControls(this.camera,this.renderer.domElement),this.orbitControls.autoRotate=!0,this.orbitControls.autoRotateSpeed=-1,$("#canvas-wrap").css("opacity",0).append(this.renderer.domElement).fadeTo(1e3,1)},t.prototype.animate=function(){var t,e,n,i,a,s,o,r,l,h,u,c,d,p,m,b,E,g,f,w,y;for(requestAnimationFrame(Audanism.Graphic["public"].animate),this.thisLoop=new Date,this.lastLoop>0?this.fps=1e3/(this.thisLoop-this.lastLoop):this.fps=60,this.lastLoop=this.thisLoop,this.fps<20?(this.numBadFps++,EventDispatcher.trigger("audanism/performance/badfps",this.fps)):(this.numBadFps=0,EventDispatcher.trigger("audanism/performance/goodfps",this.fps)),this.numBadFps>=5&&EventDispatcher.trigger("audanism/performance/bad",this.fps),this.frame++,EventDispatcher.trigger("audanism/graphic/update",this.frame),this.state.shouldSetDaylight&&(this.setDaylight(),this.state.shouldSetDaylight=!1),t=function(t){return function(e){var n,i;return n=t.organism.getFactorOfType(e),i=t.factors[e],i.userData.hover=!1,i.userData.isModifying=!0,t._tweenSomething(i.position,{y:i.position.y},{y:(1e3-n.disharmony)/2},1e3,function(){return i.userData.startPosition=i.position.clone(),i.userData.hover=!0,i.userData.isModifying=!1})}}(this),g=this.organism.getFactors(),s=0,l=g.length;l>s;s++)i=g[s],a=this.factors[i.factorType],!a.userData.isModifying&&this.frame>10?t(i.factorType):a.userData.hover&&(a.position.y=a.userData.startPosition.y+200*Math.sin((this.frame-a.userData.hoverStartFrame)/(10*i.factorValue)));for(f=this.balls,o=0,h=f.length;h>o;o++)e=f[o],e.ball3d.userData.hover&&(e.ball3d.position.y=e.ball3d.userData.startPosition.y+15*Math.sin(e.hoverPhase+(this.frame-e.ball3d.userData.hoverStartFrame)*e.hoverSpeed));if(null!=this.instaCubes&&this._updateInstaCubes(),this.newCubes.length>0){for(w=this.newCubes,r=0,u=w.length;u>r;r++)n=w[r],this.cubes.push(n),this.scene.add(n),p=new THREE.Geometry,p.vertices.push(new THREE.Vector3(0,0,0)),p.vertices.push(n.position.clone()),m=new THREE.LineBasicMaterial({color:14880858,opacity:.3}),d=new THREE.Line(p,m),this.scene.add(d),n.userData.cubeLine=d;this.newCubes=[]}for(y=this.megaCubes,b=0,c=y.length;c>b;b++)E=y[b],E.rotation.x+=.003,E.rotation.z+=7e-4;return this.frame%10===1&&this.room.material.ambient.offsetHSL(1e-4,0,0),TWEEN.update(),this.stats.update(),this.orbitControls.update(),this.renderer.render(this.scene,this.camera)},t.prototype.addToQueue=function(t,e){return this.queue.push({fn:t,args:e})},t.prototype.runQueue=function(){var t,e,n,i,a;for(i=this.queue,a=[],e=0,n=i.length;n>e;e++)t=i[e],a.push(t.fn.call(this,t.args));return a},t.prototype.onIteration=function(t){var e,n,i,a,s,o,r,l,h,u,c,d,p,m,b,E,g,f,w,y,C,T,S;if(g=t.organism,s=g.getDisharmonyHistoryData(),0!==s.length){for(s=s[s.length-1],null==this.opts.initialDisharmonyData&&(this.opts.initialDisharmonyData=s),y=g.getDisharmonyChange(10,"actual"),this.largestDistance=0,f=this.balls,l=0,c=f.length;c>l;l++)e=f[l],this.frame%4===0&&(b=e.pos.clone(),b.multiplyScalar(y),T=e.ball3d.position.clone(),S={x:b.x,y:b.y,z:b.z},e.ball3d.userData.hover=!1,this._tweenSomething(e.ball3d.position,T,S,100,function(t){return function(){return e.ball3d.userData.hover=!0}}(this))),e.ball3d.position.length()>this.largestDistance&&(this.largestDistance=e.ball3d.position.length());for(this._tweenCameraDistance(this.largestDistance*(this.opts.cameraDistanceStart/this.opts.clusterSize)),w=this.organism.getNodes(),C=[],h=0,d=w.length;d>h;h++)if(E=w[h],a=E.getCells(),e=this.balls[E.nodeId],this.frame-e.ball3d.userData.bornAt>30){for(r=0,u=0,p=a.length;p>u;u++)i=a[u],r+=g.getDisharmonyChangeForFactor(i.factorType,20);o=r/a.length,m=Math.min(Math.pow(o,2),10),n={x:m,y:m,z:m},C.push(this._tweenSomething(e.ball3d.scale,e.ball3d.scale.clone(),n,200))}else C.push(void 0);return C}},t.prototype.setDaylight=function(){var t,e,n,i,a;return i=new Date,a=this.opts.roomColor.clone(),n=60*i.getHours()+i.getMinutes(),e=n>720?n-720:720-n,t=.5*e/720,console.log("darken",t),console.log("minutes from midday",e),a.offsetHSL(0,0,-t),this.room.material.ambient=a},t.prototype.createBalls=function(t){var e,n,i,a,s,o,r,l;for(l=[],s=o=0,r=t-1;r>=0?r>=o:o>=r;s=r>=0?++o:--o)e={ballId:this.balls.length,hello:"hello. i am ball no "+s+".",direction:new THREE.Vector3(2*Math.random()-1,2*Math.random()-1,2*Math.random()-1),ballSize:this.opts.ballSize,hoverPhase:Math.random()*Math.PI*2,hoverSpeed:1/(50+100*Math.random()),state:{numInfluenced:0,hover:!0},ref:{numInfluenced:0}},e.pos=new THREE.Vector3(e.direction.x*Math.random()*this.opts.clusterSize,e.direction.y*Math.random()*this.opts.clusterSize,e.direction.z*Math.random()*this.opts.clusterSize),e.currPos=e.pos.clone(),e.changes={},i=new THREE.SphereGeometry(e.ballSize,20,10),a=[new THREE.MeshLambertMaterial({ambient:this.opts.ballColor.clone(),side:THREE.DoubleSide,shading:THREE.FlatShading,blending:THREE.AdditiveBlending,vertexColors:THREE.VertexColors}),new THREE.MeshPhongMaterial({color:16777215,specular:16755370})],n=new THREE.Mesh(i,a[0]),n.ballId=e.ballId,n.position=e.pos.clone(),n.userData.hover=!0,n.userData.startPosition=n.position.clone(),n.userData.hoverStartFrame=0,n.userData.bornAt=this.frame,n.scale.set(.01,.01,.01),this.scene.add(n),this._tweenSomething(n.scale,{x:.01,y:.01,z:.01},{x:1,y:1,z:1},1e3),this.balls[e.ballId]=e,l.push(e.ball3d=n);return l},t.prototype.onCompareNodes=function(t){var e,n,i,a,s;for(a=t.nodes,s=[],e=0,n=a.length;n>e;e++)i=a[e],s.push(this._animateComparingBall(this.balls[i.nodeId]));return s},t.prototype._animateComparingBall=function(t){var e,n,i,a;return a=t.ball3d.material.ambient,e=a.clone(),n={r:this.opts.ballColorCompare.r,g:this.opts.ballColorCompare.g,b:this.opts.ballColorCompare.b},this._tweenBallColor(t,e.clone(),this.opts.ballColorCompare.clone(),200,function(n){return function(){return n._tweenBallColor(t,n.opts.ballColorCompare.clone(),e.clone(),500)}}(this)),t.state.hover=!1,i={x:t.ball3d.position.x+15*(2*Math.random()-1),y:t.ball3d.position.y+15*(2*Math.random()-1),z:t.ball3d.position.z+15*(2*Math.random()-1)},this._tweenSomething(t.ball3d.position,t.ball3d.position.clone(),i,30,function(e){return function(){return t.currPos=t.ball3d.position.clone(),t.state.hover=!0}}(this))},t.prototype.onInfluenceNode=function(t){return t.node.node?(this._animateInfluencedBall(this.balls[t.node.node.nodeId]),1===t.meta.current&&null!=t.meta.source&&"instagram"===t.meta.source?(this._spawnInstaCube.bind(this),setTimeout(function(e){return function(){return e._spawnInstaCube(t)}}(this),500)):void 0):void 0},t.prototype.onInfluenceFactorAfter=function(t){var e,n,i,a;return n=t.factor.factor,i=this.factors[n.factorType],i.userData.hover=!1,i.userData.isModifying=!0,e=function(t){return function(){var e,n,a,s,o,r,l;return i.userData.toruses||(i.userData.toruses=[]),e=i.userData.toruses,o=20,l=10,e.length>0?(n=e[e.length-1],s=n.material.ambient.clone(),r=n.geometry.radius,l=n.geometry.tube):(s=i.material.ambient.clone(),r=i.geometry.radiusTop,l=l),s.offsetHSL(.05,-.1,0),r*=.96,l*=.9,a=new THREE.Mesh(new THREE.TorusGeometry(r,l),new THREE.MeshLambertMaterial({ambient:s,side:THREE.FrontSide})),a.position.y=i.geometry.height/2+(o+e.length*(o+l)),a.rotation.x=Math.PI/2,a.scale.set(.01,.01,.01),i.userData.toruses.push(a),i.add(a),t._tweenSomething(a.scale,{x:.01,y:.01,z:.01},{x:1,y:1,z:1},1e3),i.userData.isModifying}}(this),i.scale.y=n.factorValue/i.userData.initialValue,"wind"===t.meta.sourceAttr?this._tweenSomething(i.rotation,{z:i.rotation.z},{z:t.factor.value},300,e):"temperature"===t.meta.sourceAttr&&(a=i.userData.baseColor.clone(),a.offsetHSL(0,t.factor.value/5,0),this._tweenSomething(i.material.ambient,i.material.ambient.clone(),a,300,e)),this._tweenSomething(i.position,i.position.clone(),{x:1===randomInt(0,1)?-100:100,y:(1e3-n.disharmony)/2},300,function(t){return function(){return i.userData.startPosition=i.position.clone(),i.userData.hoverStartFrame=t.frame,i.userData.hover=!0}}(this))},t.prototype._animateInfluencedBall=function(t){var e,n,i,a;return a=t.ball3d.material.ambient,e=a.clone(),n={r:this.opts.ballColorInfluence.r,g:this.opts.ballColorInfluence.g,b:this.opts.ballColorInfluence.b},this._tweenSomething(a,a.clone(),this.opts.ballColorInfluence.clone(),200,function(e){return function(){return e._tweenSomething(a,e.opts.ballColorInfluence.clone(),a.clone(),200,function(){var n,i,a,s;return t.state.numInfluenced+=1,s=t.state.numInfluenced%5/5,t.currPos=t.ball3d.position.clone(),t.state.hover=!0,n=e.opts.ballColor.clone(),n.lerp(e.opts.ballColorVeteran.clone(),s),e._tweenSomething(t.ball3d.material.ambient,t.ball3d.material.ambient.clone(),{r:n.r,g:n.g,b:n.b},10),0===s?(a=3*t.ball3d.geometry.radius,i=new THREE.Mesh(new THREE.CylinderGeometry(a,a,1),new THREE.MeshLambertMaterial({ambient:t.ball3d.material.ambient.clone(),transparent:!0,opacity:.3,side:THREE.DoubleSide})),i.rotation.x=t.state.numInfluenced/5*(Math.PI/4),t.ball3d.add(i)):void 0})}}(this)),t.ball3d.userData.hover=!1,i={x:t.ball3d.position.x+300*(2*Math.random()-1),y:t.ball3d.position.y+300*(2*Math.random()-1),z:t.ball3d.position.z+300*(2*Math.random()-1)},this._tweenSomething(t.ball3d.position,t.ball3d.position.clone(),i,200,function(e){return function(){return t.ball3d.userData.hoverStartFrame=e.frame,t.ball3d.userData.startPosition=t.ball3d.position.clone(),t.ball3d.userData.hover=!0}}(this))},t.prototype._spawnInstaCube=function(t){var e,n,i,a;return n=new THREE.CubeGeometry(30,30,30),a=[new THREE.MeshLambertMaterial({ambient:924449,side:THREE.DoubleSide})],e=new THREE.Mesh(n,a[0]),e.position.set((1-2*Math.random())*this.opts.clusterSize*.5*(1.5-Math.random()),(1-2*Math.random())*this.opts.clusterSize*(1.5-Math.random()),(1-2*Math.random())*this.opts.clusterSize*(1.5-Math.random())),e.rotation.set(Math.random(),Math.random(),Math.random()),null==this.instaCubes&&(this.instaCubes=[]),i={cube:e,posStart:e.position.clone(),phase:Math.random()*Math.PI*2,hoverSpeed:1/(.01+80*Math.random()),rotateSpeed:1/(10+40*Math.random())},this.instaCubes.push(i),this.newCubes.push(e),this.instaCubes.length>this.opts.groupCubesEvery&&this.instaCubes.length%this.opts.groupCubesEvery===1?this._replaceCubesWithMegaCube():void 0},t.prototype._replaceCubesWithMegaCube=function(){var t,e,n,i,a,s,o,r,l,h,u;for(t=new THREE.Color,t.setHSL(Math.random(),.2,.2),n=new THREE.IcosahedronGeometry(200),a=new THREE.MeshLambertMaterial({ambient:t,side:THREE.DoubleSide}),l=new THREE.Mesh(n,a),h=new THREE.Vector3(this.opts.roomSize/2-200,this.opts.roomSize/2-200,this.opts.roomSize/2-200),h.applyAxisAngle(new THREE.Vector3(1,0,0),2*Math.random()*Math.PI),h.applyAxisAngle(new THREE.Vector3(0,1,0),2*Math.random()*Math.PI),h.applyAxisAngle(new THREE.Vector3(0,0,1),2*Math.random()*Math.PI),l.position=h,null==this.megaCubes&&(this.megaCubes=[]),this.megaCubes.push(l),this.scene.add(l),s=this.cubesGrouped,e=this.cubesGrouped+this.opts.cubesPerGroup,u=this.instaCubes.slice(s,e),o=0,r=u.length;r>o;o++)i=u[o],this._removeCube(i,h.clone(),l);return this.cubesGrouped+=e-s},t.prototype._removeCube=function(t,e,n){var i,a;return t.cube.add(t.cube.userData.cubeLine),i=t.cube.position,a=i.clone(),a.multiplyScalar(100),this._tweenSomething(i,i.clone(),e,1e3,function(e){return function(){return t.cube.userData.cubeLine.material.color=0,n.add(t.cube.userData.cubeLine),e.scene.remove(t.cube)}}(this))},t.prototype._updateInstaCubes=function(){var t,e,n,i,a;for(i=this.instaCubes,a=[],e=0,n=i.length;n>e;e++)t=i[e],a.push(t.cube.rotation.x+=t.rotateSpeed);return a},t.prototype._tweenBall=function(t,e,n,i){var a;return i=i||300,a=new TWEEN.Tween(e).to(n,i),this.tweens.push(a),a.easing(TWEEN.Easing.Quadratic.InOut),a.onUpdate(function(){return t.ball3d.position.set(this.x,this.y,this.z)}),a.start()},t.prototype._tweenBallSize=function(t,e,n,i,a){var s;return s=new TWEEN.Tween({from:e}).to(n,i),this.tweens.push(s),s.easing(TWEEN.Easing.Linear.None),s.onUpdate(function(){return t.ball3d.scale.set(this.x,this.y,this.z)}),s.start()},t.prototype._tweenCameraDistance=function(t){var e,n;return e=this,n=new TWEEN.Tween({distance:this.opts.cameraDistance}).to({distance:t},400),this.tweens.push(n),n.easing(TWEEN.Easing.Quadratic.InOut),n.onUpdate(function(){return e.opts.cameraDistance=this.distance}),n.start()},t.prototype._tweenBallColor=function(t,e,n,i,a){var s,o,r;return s={r:e.r,g:e.g,b:e.b},o={r:n.r,g:n.g,b:n.b},r=new TWEEN.Tween(s).to(o,i).easing(TWEEN.Easing.Quadratic.InOut),this.tweens.push(r),r.onUpdate(function(){return t.ball3d.children.length>0?t.ball3d.children[0].material.ambient.setRGB(this.r,this.g,this.b):t.ball3d.material.ambient.setRGB(this.r,this.g,this.b)}),a&&r.onComplete(a),r.start()},t.prototype._tweenColor=function(t,e,n,i,a){var s,o,r;return s={r:e.r,g:e.g,b:e.b},o={r:n.r,g:n.g,b:n.b},r=new TWEEN.Tween(s).to(o,i).easing(TWEEN.Easing.Quadratic.InOut),this.tweens.push(r),r.onUpdate(function(){return t.setRGB(this.r,this.g,this.b)}),a&&r.onComplete(a),r.start()},t.prototype._tweenSomething=function(t,e,n,i,a){var s;return s=new TWEEN.Tween(e).to(n,i).easing(TWEEN.Easing.Quadratic.InOut),this.tweens.push(s),s.onUpdate(function(){var e,n,i,a,s;for(a=Object.keys(this),s=[],e=0,i=a.length;i>e;e++)n=a[e],s.push(t[n]=this[n]);return s}),a&&s.onComplete(a),s.start()},t}(),module.exports=VisualOrganism;

},{"../event/EventDispatcher.coffee":26,"../util/utilities.coffee":38}],31:[function(require,module,exports){
var EventDispatcher,GUI,Utils,bind=function(t,e){return function(){return t.apply(e,arguments)}};EventDispatcher=require("../event/EventDispatcher.coffee"),Utils=require("../util/utilities.coffee"),GUI=function(){function t(){this._setWikiContent=bind(this._setWikiContent,this),this.$organismStats=$("#organism-stats"),this.$factorStats=$("#factor-stats"),this.$influences=$("#influences"),this.$influenceTemplate=this.$influences.find(".template").clone(!0).removeClass("template"),this.$influences.find(".template").hide(),this.$wiki=$("#wiki"),this._setupControls(),this._setupWiki(),this._showCozyInfo(),EventDispatcher.listen("audanism/iteration",this,this.onIteration),EventDispatcher.listen("audanism/influence/node/done",this,this.onInfluenceNodeDone),EventDispatcher.listen("audanism/influence/factor/after",this,this.onInfluenceFactorAfter),EventDispatcher.listen("audanism/organism/stressmode",this,this.onStressModeChange)}return t.prototype._setupControls=function(){return $("#controls .btn").click(function(t){return function(t){return t.preventDefault(),EventDispatcher.trigger("audanism/controls/"+$(t.currentTarget).attr("href").replace("#",""))}}(this)),EventDispatcher.listen("audanism/controls/start",this,function(t){return function(){return $("body").removeClass("paused").addClass("running")}}(this)),EventDispatcher.listen("audanism/controls/pause audanism/controls/stop",this,function(t){return function(){return $("body").removeClass("running").addClass("paused")}}(this)),EventDispatcher.listen("audanism/controls/toggleview",this,function(t){return function(){return $("body").toggleClass("clean-view")}}(this)),EventDispatcher.listen("audanism/controls/togglesound",this,function(t){return function(){return $("body").toggleClass("muted")}}(this))},t.prototype._setupWiki=function(){return $("#wiki").fadeTo(2e3,1),$(document).on("click","#intro-btn-start",function(t){return function(e){return e.preventDefault(),EventDispatcher.trigger("audanism/controls/start"),t.$wiki.fadeOut(500,function(){return $("#intro-btn-start").html("Resume")})}}(this)),$(document).on("click","[data-target-tab]",function(t){return function(e){return e.preventDefault(),t._setWikiContent($(e.currentTarget).attr("data-target-tab"))}}(this)),$(document).on("click","[data-toggle-wiki]",function(t){return function(e){var n;return e.preventDefault(),n=$(e.currentTarget).attr("data-toggle-wiki"),"show"===n?t.$wiki.fadeIn(500):t.$wiki.fadeOut(500)}}(this))},t.prototype._setWikiContent=function(t){return this.$wiki.is(":visible")||this.$wiki.fadeIn(500),$(".tab-content").removeClass("active").filter("[data-tab='"+t+"']").addClass("active"),this.$wiki.find("a[data-target-tab]").removeClass("active").filter("[data-target-tab='"+t+"']").addClass("active")},t.prototype._showCozyInfo=function(){var t,e;switch(t=(new Date).getHours(),e="",t){case 23:case 0:case 1:case 2:case 3:case 4:case 5:e="night";break;case 5:case 6:case 7:e="early-morning";break;case 8:case 9:case 10:e="morning";break;case 11:case 12:case 13:e="midday";break;case 14:case 15:case 16:case 17:e="afternoon";break;case 18:case 19:case 20:case 21:case 22:e="evening"}return $(".time-of-day").filter("."+e).show()},t.prototype.onIteration=function(t){var e,n,i,a,s,r,o,u,c;for(o=t.organism,i=o.getDisharmonyHistoryData(1),this.$organismStats.find("#summed-disharmony .value").html(Math.round(o._sumDisharmony)).end().find("#actual-disharmony .value").html(Math.round(o._actualDisharmony)).end(),n=this.$factorStats.find("#factor-values"),e=this.$factorStats.find("#factor-disharmonies"),u=o.getFactors(),c=[],s=0,r=u.length;r>s;s++)a=u[s],n.find('[data-factor="'+a.factorType+'"]').html(Utils.decimalAdjust("round",a.factorValue,-1)),c.push(e.find('[data-factor="'+a.factorType+'"]').html(Utils.numberSuffixed(a.disharmony,-1)));return c},t.prototype.onInfluenceNodeDone=function(t){var e,n,i;return n=t[0],"instagram"===n.meta.source&&(i=n.meta.sourceData,e={source:n.meta.source,summary:'<img src="'+i.images.thumbnail.url+'" /><span class="caption">'+i.caption.text.substring(0,30)+"</span>",url:i.link,type:"Nodes",value:null}),e?this.appendInfluenceBox(e):void 0},t.prototype.onInfluenceFactorAfter=function(t){var e;return"weather"===t.meta.source&&(e={source:t.meta.source,summary:t.meta.summary,type:"Factor "+t.factor.factor.factorType}),e?this.appendInfluenceBox(e):void 0},t.prototype.appendInfluenceBox=function(t){var e,n,i;return e=this.$influenceTemplate.clone().attr("data-influence-source",t.source),e.find(".influence-source").html(t.source),e.find(".influence-summary").html(t.summary),e.find(".influence-link").html($("<a />",{href:t.url,target:"_blank"}).html("Link")),e.find(".influence-type").html(t.type),e.find(".influence-value").html(t.value||""),this.$influences.append(e),e.show(),n=this.$influences.find(".influence"),i=n.size(),i>6?this.$influences.find(".influence").filter(function(){return n.index(this)<i-6}).hide():void 0},t.prototype.onStressModeChange=function(t){return this.$organismStats.find(".stress-mode-indicator").toggleClass("stressed",t)},t}(),module.exports=GUI;

},{"../event/EventDispatcher.coffee":26,"../util/utilities.coffee":38}],32:[function(require,module,exports){
var Constants,Node,NodeCell;Constants=require("../environment/Constants.coffee"),NodeCell=require("./NodeCell.coffee"),Node=function(){function t(){var e,r,o;this.nodeId=t._idCounter++,e=function(){o=[];for(var t=1,e=Constants.NUM_FACTORS;e>=1?e>=t:t>=e;e>=1?t++:t--)o.push(t);return o}.apply(this),this._cells=function(){var o,n,l;for(l=[],r=o=1,n=t.NUM_CELLS;n>=1?n>=o:o>=n;r=n>=1?++o:--o)l.push(new NodeCell(e.splice(Math.floor(Math.random()*e.length),1)[0],0));return l}(),this._cells.sort(function(t,e){return t.factorType>e.factorType})}return t._idCounter=0,t.NUM_CELLS=2,t.prototype.clone=function(){var e,r,o;o=new t,t._idCounter--;for(r in this)o[r]=this[r];return o._cells=function(){var t,r,n,l;for(n=o._cells,l=[],t=0,r=n.length;r>t;t++)e=n[t],l.push(e.clone());return l}(),o},t.prototype.getCells=function(){return this._cells},t.prototype.getCell=function(t){var e,r,o,n,l;for(n=this._cells,r=0,o=n.length;o>r;r++)if(e=n[r],e.factorType===t){l=e;break}return l},t.prototype.hasCellOfFactorType=function(t){var e,r,o,n,l;for(r=!1,l=this._cells,o=0,n=l.length;n>o;o++)e=l[o],r=r||e.factorType===t;return r},t.prototype.getCellValue=function(t){var e;return e=this.getCell(t),e?e.factorValue:0},t.prototype.setCellValue=function(t,e){var r;return r=this.getCell(t),r.factorValue=e,r.factorValue<0&&(r.factorValue=0),r.factorValue>100?r.factorValue=100:void 0},t.prototype.addCellValue=function(t,e){return this.setCellValue(t,this.getCellValue(t)+e)},t.prototype.getCellValues=function(t){var e,r;return null==t&&(t=!1),r=function(){var t,r,o,n;for(o=this._cells,n=[],t=0,r=o.length;r>t;t++)e=o[t],n.push(e.factorValue);return n}.call(this),t?r.join(" "):r},t.prototype.getString=function(){return"#"+this.nodeId+" {"+this.getCellValues(!0)+"}"},t.prototype.toString=function(){return this.getString()},t}(),module.exports=Node;

},{"../environment/Constants.coffee":23,"./NodeCell.coffee":33}],33:[function(require,module,exports){
var NodeCell;NodeCell=function(){function t(t,e){this.factorType=t,this.factorValue=e}return t.prototype.clone=function(){return new t(this.factorType,this.factorValue)},t.prototype.addFactorValue=function(t){return this.factorValue+=t,this.factorValue<0&&(this.factorValue=0),this.factorValue>100?this.factorValue=100:void 0},t}(),module.exports=NodeCell;

},{}],34:[function(require,module,exports){
var EventDispatcher,InstagramSourceAdapter,SourceAdapter,TextInterpreter,extend=function(t,e){function r(){this.constructor=t}for(var n in e)hasProp.call(e,n)&&(t[n]=e[n]);return r.prototype=e.prototype,t.prototype=new r,t.__super__=e.prototype,t},hasProp={}.hasOwnProperty;EventDispatcher=require("../event/EventDispatcher.coffee"),SourceAdapter=require("./SourceAdapter.coffee"),TextInterpreter=require("../util/TextInterpreter.coffee"),InstagramSourceAdapter=function(t){function e(t,r){this.interval=null!=t?t:5e3,this.tag=null!=r?r:"audanism",e.__super__.constructor.call(this,"instagram",this.interval),this.clientId="f42a4ce0632e412ea5a0353c2b5e581f",this.photoSinceId=0,this.queryUrl="https://api.instagram.com/v1/tags/"+this.tag+"/media/recent",this.jqxhr=null}return extend(e,t),e.prototype.activate=function(){return this.active=!0,this.queryInterval=setInterval(function(t){return function(){return t.queryPhotos()}}(this),this.interval)},e.prototype.deactive=function(){return this.active=!1,clearInterval(this.queryInterval)},e.prototype.queryPhotos=function(){return!this.jqxhr&&this.active?this.jqxhr=$.ajax({dataType:"jsonp",url:this.queryUrl,data:{client_id:this.clientId,count:1,max_id:this.photoSinceId},success:function(t){return function(e){return t.processPhotos(e.data)}}(this)}):void 0},e.prototype.processPhotos=function(t){var e,r,n,i,o,a,s,u,c,h,p,d;for(a=new TextInterpreter,o=[],s=0,c=t.length;c>s;s++)if(p=t[s],p.id!==this.photoSinceId&&(this.photoSinceId=p.id,p.caption))for(e=p.caption.text,r=a.getNumCharsInGroups(e,5),n=u=0,d=r.length-1;d>=0?d>=u:u>=d;n=d>=0?++u:--u)r[n]&&(h=Math.round(20*r[n]),h=Math.random()>=.5?-h:h,i={node:{node:"rand",factor:n+1,valueModifier:h},meta:{current:n+1,total:r.length,source:this.sourceId,sourceData:p}},o.push(i),EventDispatcher.trigger("audanism/influence",i));return o=o.filter(function(t){return function(t){return t.node.valueModifier}}(this)),o.length>0&&EventDispatcher.trigger("audanism/influence/node/done",[o]),this.jqxhr=null},e}(SourceAdapter),module.exports=InstagramSourceAdapter;

},{"../event/EventDispatcher.coffee":26,"../util/TextInterpreter.coffee":37,"./SourceAdapter.coffee":35}],35:[function(require,module,exports){
var SourceAdapter;SourceAdapter=function(){function e(e,t){this.sourceId=e,this.interval=null!=t?t:5e3,this.active=!1}return e.prototype.activate=function(){return this.active=!0},e.prototype.deactivate=function(){return this.active=!1},e.prototype.setInterval=function(e){this.interval=e},e.prototype.getAdaptedSourceData=function(e){var t;return t={factors:[{factor:null,valueModifier:null}],node:[{node:null,factorType:null,valueModifier:0}],random:[{object:"node",num:[0,1],valueModifier:[0,1]}]}},e.prototype.triggerInfluence=function(e){return null!=this.listener.influence?this.listener.influence(e):void 0},e}(),module.exports=SourceAdapter;

},{}],36:[function(require,module,exports){
var EventDispatcher,SourceAdapter,WheatherSourceAdapter,randomInt,extend=function(t,e){function r(){this.constructor=t}for(var a in e)hasProp.call(e,a)&&(t[a]=e[a]);return r.prototype=e.prototype,t.prototype=new r,t.__super__=e.prototype,t},hasProp={}.hasOwnProperty;EventDispatcher=require("../event/EventDispatcher.coffee"),SourceAdapter=require("./SourceAdapter.coffee"),randomInt=require("../util/utilities.coffee").randomInt,WheatherSourceAdapter=function(t){function e(t){this.interval=null!=t?t:5e3,e.__super__.constructor.call(this,"weather",this.interval),this.queryUrl="http://www.yr.no/place/%s/%s/%s/forecast.xml",this.jqxhr=null,this.queryInterval}return extend(e,t),e.prototype.activate=function(){return this.active=!0,this.queryInterval=setInterval(function(t){return function(){return t.queryWeather()}}(this),this.interval)},e.prototype.deactive=function(){return this.active=!1,clearInterval(this.queryInterval)},e.prototype.queryWeather=function(){return!this.jqxhr&&this.active?this.jqxhr=$.ajax({dataType:"xml",type:"get",url:"/ajax/town-weather.php",data:{},success:function(t){return function(e){return t.processWeather(e),t.jqxhr=null}}(this),error:function(t){return function(e){return t.jqxhr=null}}(this)}):void 0},e.prototype.processWeather=function(t){var e,r,a,n,o;switch(r=$(t),e=r.find('tabular time[period="0"]'),a={factor:{factor:"rand"},meta:{current:1,total:1,source:this.sourceId,sourceData:t}},randomInt(0,1)){case 0:o=parseFloat(e.find("windSpeed").attr("mps")),a.factor.valueModifier=1===randomInt(0,1)?o:-o,a.meta.sourceAttr="wind",a.meta.summary="Wind blowing at "+o+" mps in "+r.find("location name").text();break;case 1:n=parseFloat(e.find("temperature").attr("value")),a.factor.valueModifier=10*(n-10)/60,a.meta.sourceAttr="temperature",a.meta.summary="It's around "+n+"°C in "+r.find("location name").text()}return t&&a.factor.valueModifier?(EventDispatcher.trigger("audanism/influence",a),EventDispatcher.trigger("audanism/influence/factor/done",[[a]])):void 0},e}(SourceAdapter),module.exports=WheatherSourceAdapter;

},{"../event/EventDispatcher.coffee":26,"../util/utilities.coffee":38,"./SourceAdapter.coffee":35}],37:[function(require,module,exports){
var TextInterpreter;TextInterpreter=function(){function r(){}return r.prototype.getNumCharsInGroups=function(r,t,e){var n,o,u,f,l,p,h,a,i,s,c,g,v,x,I,C,T,d,m;for(f=r.split(""),C=26,p=function(){var r,e,n;for(n=[],h=r=0,e=t-1;e>=0?e>=r:r>=e;h=e>=0?++r:--r)n.push(0);return n}(),l=null,e=null!=e?e:!0,a=0,g=f.length;g>a;a++)n=f[a],u=n.toUpperCase().charCodeAt(0)-65,u>=C||0>u||(o=Math.floor(u/(C/t)),p[o]=p[o]+1);if(e){for(d=0,i=0,v=p.length;v>i;i++)h=p[i],d+=h;for(l=function(){var r,t,e;for(e=[],r=0,t=p.length;t>r;r++)h=p[r],e.push(h/d);return e}(),c=-1,s=0,x=l.length;x>s;s++)m=l[s],m>c&&(c=m);for(h=I=0,T=l.length-1;T>=0?T>=I:I>=T;h=T>=0?++I:--I)m=l[h],l[h]=m/c}return e?l:p},r}(),module.exports=TextInterpreter;

},{}],38:[function(require,module,exports){
var decimalAdjust,logWithBase,numberSuffixed,randomInt;randomInt=function(t,n){var e,u,r;return null==n&&(n=0),r=Math.random(),null==t&&(e=[0,t],t=e[0],n=e[1]),t>n&&(u=[n,t],t=u[0],n=u[1]),Math.floor(r*(n-t+1)+t)},logWithBase=function(t,n){return Math.log(n)/Math.log(t)},decimalAdjust=function(t,n,e){return"undefined"==typeof e||0===+e?Math[t](n):(n=+n,e=+e,isNaN(n)||"number"!=typeof e||e%1!==0?NaN:(n=n.toString().split("e"),n=Math[t](+(n[0]+"e"+(n[1]?+n[1]-e:-e))),n=n.toString().split("e"),+(n[0]+"e"+(n[1]?+n[1]+e:e))))},null==Math.round10&&(Math.round10=function(t,n){return decimalAdjust("round",t,n)}),null==Math.floor10&&(Math.floor10=function(t,n){return decimalAdjust("floor",t,n)}),null==Math.ceil10&&(Math.ceil10=function(t,n){return decimalAdjust("ceil",t,n)}),numberSuffixed=function(t,n){var e,u;return u="",t>=1e9?(u="g",t/=1e9):t>=1e6?(u="m",t/=1e6):t>=1e3&&(u="k",t/=1e3),e=Math.round10(t,n),e+u},module.exports={randomInt:randomInt,logWithBase:logWithBase,decimalAdjust:decimalAdjust,numberSuffixed:numberSuffixed};

},{}]},{},[22])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
